{
	"info": {
		"_postman_id": "4c301804-9996-495f-885f-118eaf67e585",
		"name": "MoMo Open APIs SandBox",
		"description": "MTN MoMo Open APIs are a set of APIs that allow third-party developers to create innovative digital financial services using MTN Mobile Money platform.\n\nThese APIs facilitate all key use cases including consumer to business payments (C2B), business to business payments (B2B), collections, and disbursements, Cash In, Cash Out, Refund, Notification and more.\n\nMoMo APIs are completely RESTful and all our responses are returned in JSON.\n\n# Get Started\n\n# Generate Subscription Keys\n\n1. Sign up [https://momodeveloper.mtn.com](https://momodeveloper.mtn.com)\n    \n2. Navigate to the products page [Product-descriptions](https://momodeveloper.mtn.com/Product-descriptions).\n    \n3. Select drop down on product that suits the business case and subscribe.\n    \n4. After completion, you can locate the Subscription Keys in [your profile](https://momodeveloper.mtn.com/profile). Access additional information  \n    through the link below on creating subscription keys [How to create subscription keys<br>on MoMoDeveloper | MoMo Dev Community (mtn.com)](https://momodevelopercommunity.mtn.com/how-to-59/how-to-create-subscription-keys-on-momodeveloper-148)\n    \n\n<video src=\"https://www.youtube.com/embed/SdXoDmQ7U5I?si=RigZhn3q_bigaiEM\" width=\"560\" height=\"315\"></video>\n\nConfigure the EnvEnvironment varibles as shown below\n\n| **Subscription name** | **Key Type** | **Variable** |  \n| Disbursements | Primary | {{Disbursement_Subscription-Key}} |  \n| Collections | Primary | {{Collection_Subscription-Key}}|\n\n### Fork the MoMo Open API Postman Collection\n\n[<img src=\"https://run.pstmn.io/button.svg\" alt=\"Run In Postman\">](https://app.getpostman.com/run-collection/28452721-4c301804-9996-495f-885f-118eaf67e585?action=collection/fork&source=rip_markdown&collection-url=entityId=28452721-4c301804-9996-495f-885f-118eaf67e585&entityType=collection&workspaceId=66fe3943-b010-4047-ad82-618785225cc8#?env[SandBox]=W3sia2V5IjoiYXBpX3VzZXIiLCJ2YWx1ZSI6IiIsImVuYWJsZWQiOnRydWUsInR5cGUiOiJkZWZhdWx0Iiwic2Vzc2lvblZhbHVlIjoiZDM3YTcwYzUtMjgyZC00YTcxLTk3NzYtMjI1YzU2NGMzMzQ5Iiwic2Vzc2lvbkluZGV4IjowfSx7ImtleSI6ImFwaV9rZXkiLCJ2YWx1ZSI6IiIsImVuYWJsZWQiOnRydWUsInR5cGUiOiJkZWZhdWx0Iiwic2Vzc2lvblZhbHVlIjoiNmY3MDZiYmVhZWFmNDQyNDg5YWRiMjEwYmJhNGJhOWEiLCJzZXNzaW9uSW5kZXgiOjF9LHsia2V5IjoiYmFzZV91cmwiLCJ2YWx1ZSI6Imh0dHBzOi8vc2FuZGJveC5tb21vZGV2ZWxvcGVyLm10bi5jb20vIiwiZW5hYmxlZCI6dHJ1ZSwic2Vzc2lvblZhbHVlIjoiaHR0cHM6Ly9zYW5kYm94Lm1vbW9kZXZlbG9wZXIubXRuLmNvbS8iLCJzZXNzaW9uSW5kZXgiOjJ9LHsia2V5IjoiQ29sbGVjdGlvbl9TdWJzY3JpcHRpb24tS2V5IiwidmFsdWUiOiI0YzkxZGFlN2E2ZjE0NzQzODdhMjNhMWYzZDQ0OGViNyIsImVuYWJsZWQiOnRydWUsInR5cGUiOiJkZWZhdWx0Iiwic2Vzc2lvblZhbHVlIjoiNGM5MWRhZTdhNmYxNDc0Mzg3YTIzYTFmM2Q0NDhlYjciLCJzZXNzaW9uSW5kZXgiOjN9LHsia2V5IjoiVGFyZ2V0X0Vudmlyb25tZW50IiwidmFsdWUiOiJzYW5kYm94IiwiZW5hYmxlZCI6dHJ1ZSwic2Vzc2lvblZhbHVlIjoic2FuZGJveCIsInNlc3Npb25JbmRleCI6NH0seyJrZXkiOiJBY2Nlc3NfVG9rZW4iLCJ2YWx1ZSI6IiIsImVuYWJsZWQiOnRydWUsInNlc3Npb25WYWx1ZSI6ImV5SjBlWEFpT2lKS1YxUWlMQ0poYkdjaU9pSlNNalUySW4wLmV5SmpiR2xsYm5SSlpDSTZJbVF6TjJFM01HTTFMVEk0TW1RdE5HRTNNUzA1TnpjMkxUSXlOV00xTmpSak16TTBPU0lzSW1WNGNHbHlaWE1pT2lJeU1ESTBMVEEzTFRNd1ZERTFPLi4uIiwic2Vzc2lvbkluZGV4Ijo1fSx7ImtleSI6IkFjY2Vzc19Ub2tlbl9FeHBpcnkiLCJ2YWx1ZSI6MTY4OTAzMjc2MDYwMiwiZW5hYmxlZCI6dHJ1ZSwic2Vzc2lvblZhbHVlIjoiMTcyMjM1MTg5NjE4MSIsInNlc3Npb25JbmRleCI6Nn0seyJrZXkiOiJDYWxsYmFja0hvc3QiLCJ2YWx1ZSI6IndlYmhvb2suc2l0ZSIsImVuYWJsZWQiOnRydWUsInNlc3Npb25WYWx1ZSI6IndlYmhvb2suc2l0ZSIsInNlc3Npb25JbmRleCI6N30seyJrZXkiOiJSZXF1ZXN0X0lEX0RlYml0IiwidmFsdWUiOiIyZjIwOTYzMS0wN2Q0LTQyNTQtOGQ2YS1iZDBmMWVmNzg1MzgiLCJlbmFibGVkIjp0cnVlLCJzZXNzaW9uVmFsdWUiOiIzZDBlZDE4NC01NzQ0LTQ5ODItOTcwNS01MTVmMTBlNDA1OGUiLCJzZXNzaW9uSW5kZXgiOjh9LHsia2V5IjoiUmVxdWVzdF9JRF9UcmFuc2ZlciIsInZhbHVlIjoiMTA3N2ZiYzItOTI1My00MzdmLTg4M2MtMzBlMjQ4YmM2MzVkIiwiZW5hYmxlZCI6dHJ1ZSwic2Vzc2lvblZhbHVlIjoiODlmMWYyMWMtZDMzYi00NmY5LTgxMGEtNDg4ZDU0N2RlMzIzIiwic2Vzc2lvbkluZGV4Ijo5fSx7ImtleSI6IlJlcXVlc3RfSURfUmVmdW5kIiwidmFsdWUiOiI4NWM2NmI4OC1hYmI4LTQ1MjMtYTgxZC0yZDU1NjY4MTZjNzAiLCJlbmFibGVkIjp0cnVlLCJzZXNzaW9uVmFsdWUiOiJhZGM4ZjE2My1iZjQ3LTQ2NjQtODNjNi05MGQ1MzdhOTdiYmIiLCJzZXNzaW9uSW5kZXgiOjEwfSx7ImtleSI6IlJlcXVlc3RfSURfQ2FzaEluIiwidmFsdWUiOiIiLCJlbmFibGVkIjp0cnVlLCJzZXNzaW9uVmFsdWUiOiIiLCJzZXNzaW9uSW5kZXgiOjExfSx7ImtleSI6IlJlcXVlc3RfSURfUHJlYXBwcm92YWwiLCJ2YWx1ZSI6IiIsImVuYWJsZWQiOnRydWUsInNlc3Npb25WYWx1ZSI6IiIsInNlc3Npb25JbmRleCI6MTJ9LHsia2V5IjoiUmVxdWVzdF9JRF9QYXltZW50IiwidmFsdWUiOiIiLCJlbmFibGVkIjp0cnVlLCJzZXNzaW9uVmFsdWUiOiIiLCJzZXNzaW9uSW5kZXgiOjEzfSx7ImtleSI6IlJlcXVlc3RfSURfQ2FzaE91dCIsInZhbHVlIjoiIiwiZW5hYmxlZCI6dHJ1ZSwic2Vzc2lvblZhbHVlIjoiIiwic2Vzc2lvbkluZGV4IjoxNH0seyJrZXkiOiJDYWxsYmFja1VSTCIsInZhbHVlIjoiaHR0cHM6Ly93ZWJob29rLnNpdGUvbXl3ZWJob29rc2FuZGJveCIsImVuYWJsZWQiOnRydWUsInNlc3Npb25WYWx1ZSI6Imh0dHBzOi8vd2ViaG9vay5zaXRlL215d2ViaG9va3NhbmRib3giLCJzZXNzaW9uSW5kZXgiOjE1fSx7ImtleSI6IkRpc2J1cnNlbWVudF9TdWJzY3JpcHRpb24tS2V5IiwidmFsdWUiOiI2MzU5NTFhYWZiNGY0NmJjODZkZjFhYjJjOTI4YTc1YiIsImVuYWJsZWQiOnRydWUsInR5cGUiOiJkZWZhdWx0Iiwic2Vzc2lvblZhbHVlIjoiNjM1OTUxYWFmYjRmNDZiYzg2ZGYxYWIyYzkyOGE3NWIiLCJzZXNzaW9uSW5kZXgiOjE2fSx7ImtleSI6IlJlbWl0dGFuY2VfU3Vic2NyaXB0aW9uLUtleSIsInZhbHVlIjoiODBkYmJhZWYwNjBlNDcyMGExMDg5YTAxOGJhMmJhYjgiLCJlbmFibGVkIjp0cnVlLCJ0eXBlIjoiZGVmYXVsdCIsInNlc3Npb25WYWx1ZSI6IjgwZGJiYWVmMDYwZTQ3MjBhMTA4OWEwMThiYTJiYWI4Iiwic2Vzc2lvbkluZGV4IjoxN30seyJrZXkiOiJPYXV0aDJfVG9rZW4iLCJ2YWx1ZSI6ImV5SjBlWEFpT2lKS1YxUWlMQ0poYkdjaU9pSlNNalUySW4wLmV5SnpkV0lpT2lJd0lpd2lZWFZrSWpvaU5EWTFOek0wTVRNeElpd2lZMmxrSWpvaVlUazBOemMzWmprdE5EWTJOaTAwWkRNNUxUazNaVEF0WVdWa05HWmxPVE0zWkRreUlpd2laWGh3SWpveE56QTNOemt3TXpBd0xDSnBZWFFpT2pFM01EYzNPVEF3TURBc0ltbHpjeUk2SW1oMGRIQnpPaTh2Ykc5allXeG9iM04wSWl3aVkyOXVJam93TENKelkzQWlPbHNpWVd4c1gybHVabThpWFgwLlFBdzdqVURfNDdMSGtOSVd3Ujk1NG9oc0VDS1NQS2JidEZOYldlZ2hDcUczZmdsTThzMkdMTGFmVFNCSU9sNGhoQUo0NmJSU0V4ZzFmUHhJRkpTdFU2c1dDNHdjakNFU2tvZldUNU5HNWJwNWFKVERWUTYxTXp6ODhRWWIzZUFqeXk4R24yUXFsUzFZcFVZczJPZHFjY05KMVFQbnk4OEtpbDJxMXVtZUJJWWxIZW5fNmt6cTdBcVdPNi1wb3ZDcFRHcEdHTVZoSnRUSUY5cVU2cnY3b3gzQUxPLWFUNXlVN3I0M203ZkJFOTQ5VFQ4by1oRHpqa082QmpyU3Y1bEo5anJZb2NNR3ZEa1hQeDlEd0VaX0xla1ZfUFdKQXRGQnBFNENNZHBUVGJ2QkNNeHJmbmxsR1BGbWk0QXA4MldvdzB4MmtHUW5DM3lEZEtDeVFHT2xldyIsImVuYWJsZWQiOnRydWUsInNlc3Npb25WYWx1ZSI6ImV5SjBlWEFpT2lKS1YxUWlMQ0poYkdjaU9pSlNNalUySW4wLmV5SnpkV0lpT2lJd0lpd2lZWFZrSWpvaU5EWTFOek0wTVRNeElpd2lZMmxrSWpvaVlUazBOemMzWmprdE5EWTJOaTAwWkRNNUxUazNaVEF0WVdWa05HWmxPVE0zWkRreUlpd2laLi4uIiwic2Vzc2lvbkluZGV4IjoxOH0seyJrZXkiOiJDb25zZW50X1JlcV9JZCIsInZhbHVlIjoiMDEwMDAxYjItNWM4NC00ZGQxLTllYWYtNTZkNTY2OGRhYmQzIiwiZW5hYmxlZCI6dHJ1ZSwic2Vzc2lvblZhbHVlIjoiMDEwMDAxYjItNWM4NC00ZGQxLTllYWYtNTZkNTY2OGRhYmQzIiwic2Vzc2lvbkluZGV4IjoxOX0seyJrZXkiOiJXYWl0VGltZSIsInZhbHVlIjoiMTAwMDAiLCJlbmFibGVkIjp0cnVlLCJzZXNzaW9uVmFsdWUiOiIxMDAwMCIsInNlc3Npb25JbmRleCI6MjB9LHsia2V5IjoiTVNJU0ROIiwidmFsdWUiOiIxMjNAbW9tbyIsImVuYWJsZWQiOnRydWUsInNlc3Npb25WYWx1ZSI6IjU2NzMzMTIzNDU1Iiwic2Vzc2lvbkluZGV4IjoyMX0seyJrZXkiOiJSZXF1ZXN0X0lEX0ludm9pY2UiLCJ2YWx1ZSI6IiIsImVuYWJsZWQiOnRydWUsInNlc3Npb25WYWx1ZSI6ImMzYjUyZGEwLWRmOTEtNDUzNS05YjUxLWE1YzkyNDU4ZDAwYSIsInNlc3Npb25JbmRleCI6MjJ9LHsia2V5IjoiRGVsZXRlX0lEX0ludm9pY2UiLCJ2YWx1ZSI6IiIsImVuYWJsZWQiOnRydWUsInNlc3Npb25WYWx1ZSI6ImNlOGE4YzU0LWMwMzYtNDAwMi1hZTZjLWYwY2UyMDhkNzlmNyIsInNlc3Npb25JbmRleCI6MjN9LHsia2V5IjoiUmVxdWVzdF9JRF9DYXNoX1RyYW5zZmVyIiwidmFsdWUiOiIiLCJlbmFibGVkIjp0cnVlLCJzZXNzaW9uVmFsdWUiOiIiLCJzZXNzaW9uSW5kZXgiOjI0fSx7ImtleSI6IlJlcXVlc3RfSURfUmVtaXRfVHJhbnNmZXIiLCJ2YWx1ZSI6IiIsImVuYWJsZWQiOnRydWUsInNlc3Npb25WYWx1ZSI6IiIsInNlc3Npb25JbmRleCI6MjV9LHsia2V5IjoiTm90aWZpY2F0aW9uICIsInZhbHVlIjoiVGhhbiBZb3UgZm9yIHVzaW5nIG5vdGlmaWNhdGlvbiBNb01vIE9wZW5BUEkiLCJlbmFibGVkIjp0cnVlLCJ0eXBlIjoiZGVmYXVsdCIsInNlc3Npb25WYWx1ZSI6IlRoYW4gWW91IGZvciB1c2luZyBub3RpZmljYXRpb24gTW9NbyBPcGVuQVBJIiwic2Vzc2lvbkluZGV4IjoyNn1d)\n\nEnsure the Environment is set to sandbox before running the collection.\n\nThe Collections and Folders have been configured with basic testing scripts to help narrow down the error scope\n\n# Generate API User and Key SandBox\n\nRun the below request to generate API user and Key. These will be auto saved within the environment levaraging on scripting.\n\n### [<b>Get API user and Key</b>](https://www.postman.com/momoapis/workspace/momo-open-apis/request/28452721-86331498-8686-435c-802b-78532af55000?action=share&source=copy-link&creator=28452721&ctx=documentation)\n\n# Test MSISDN Numbers\n\nIn the Sandbox, adjust the Test Numbers(MSISDN) within the sandbox envenvironment as follows.\n\nEach numeric string yields a distinct response status within the Sandbox.\n\nFor Production, Number begins with the country code.\n\n| **Number- {{MSISDN}}** | **Expected Status Response** |\n| --- | --- |\n| _**46733123450**_ | _**Failed**_ |\n| _**46733123451**_ | _**Rejected**_ |\n| _**46733123452**_ | _**Timeout**_ |\n| _**56733123453**_ | _**Success**_ |\n| _**46733123454**_ | _**Pending**_ |",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Authorization",
			"item": [
				{
					"name": "Generate access_token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cdbbfb7d-268b-4533-ab90-bffb2186dfb0",
								"exec": [
									"var responseData = pm.response.json();",
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields - access_token, token_type, and expires_in\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData).to.have.property('access_token');",
									"    pm.expect(responseData).to.have.property('token_type');",
									"    pm.expect(responseData).to.have.property('expires_in');",
									"});",
									"",
									"",
									"pm.test(\"Access token is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData.access_token).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Access token should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Token type is a valid type (e.g., 'bearer')\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.token_type).to.exist;",
									"    pm.expect(responseData.token_type).to.be.a('string');",
									"    ",
									"});",
									"pm.test(\"Expires in is a non-negative integer\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.expires_in).to.be.a('number').and.to.be.at.least(0);",
									"});",
									"pm.environment.set('Access_Token',String(responseData.access_token) );",
									"    var expiryDate = new Date();",
									"    expiryDate.setSeconds(expiryDate.getSeconds() + responseData.expires_in);",
									"    //console.log('Saving the access_token_expiry', expiryDate.getTime());",
									"    pm.environment.set('Access_Token_Expiry', expiryDate.getTime());",
									"",
									"",
									"pm.test(\"'login_Ok'  api user and api key\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    if (pm.response.code === 500) {",
									"        pm.expect(responseData.error).to.equal(\"login_failed\");",
									"    }",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a28cb25c-5024-4324-b03b-1e6d764aa4cb",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "03fe546f-58fc-4e49-9696-cfc84bf6f71d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{api_user}}",
								"password": "{{api_key}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{Collection_Subscription-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/collection/token/",
						"description": "The `POST /collection/token/` endpoint is used to obtain a token.\n\n### Request Body\n\n- No request body parameters required for this request.\n    \n\n### Response\n\nUpon a successful request, the response will be a JSON object with the following properties:\n\n- `access_token` (string): The access token obtained.\n    \n- `token_type` (string): The type of token obtained.\n    \n- `expires_in` (integer): The duration in seconds for which the token is valid.\n    \n\n### Headers\n\n- No specific headers are required for this request.\n    \n\nExample response:\n\n``` json\n{\n  \"access_token\": \"\",\n  \"token_type\": \"\",\n  \"expires_in\": 0\n}\n\n ```"
					},
					"response": [
						{
							"id": "0a04b0a3-4a5b-48f3-8fea-4e8af4ddb68d",
							"name": "Generate access_token",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{Collection_Subscription-Key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/collection/token/"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Content-Length",
									"value": "628"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Request-Context",
									"value": "appId=cid-v1:e996501c-e721-4ac1-97ff-dc6887b85e8c"
								},
								{
									"key": "Date",
									"value": "Tue, 08 Oct 2024 20:25:26 GMT"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSMjU2In0.eyJjbGllbnRJZCI6IjA0ZGIwYjk5LTkyNmYtNGQ0Ni04YzI3LTQ2OWIwMmMxZWUxMyIsImV4cGlyZXMiOiIyMDI0LTEwLTA4VDIxOjI1OjI3LjgwNyIsInNlc3Npb25JZCI6IjVhODkwODJlLTk3NmQtNGYwMy04OTNjLTJlNTEwNWI1YWM5NiJ9.hAmAJFZkdyhuEEWGgdZZUtO5hYzIcigV-Sjrhv_zsmTBRu8X8Dhs5Zssr-mulwSaDjITcKRlCna1Eej5kJNQUYeLDDB5pKK5Xx3T3eFxNLrTNvGABMENfoWZgmlLnBgg_ux9bmm4XcncNL5pb_cpEgCZKVpv-SJh2dTtY8Q-QutUDNDG34m-ifMcwicK59RiGsF8fNPKy44wX_BJhqwrg80FYEhOhrqJhzVqSSLb807yIQkx5fNFy8ekzrR2toGusQBsAVwz06g3xaDVMGXBz7mmB35gCP_NQscIGSjtFXTNeItM-HJzTU7TDBzbMDMuRaI2DU1mb7Dt30z8D2NNrw\",\n    \"token_type\": \"access_token\",\n    \"expires_in\": 3600\n}"
						}
					]
				}
			],
			"id": "dc8c2bde-0218-4072-acd2-c5de22fae8e5",
			"description": "Consists of Bearer Access Token API, This is also saved with in the enviroment, will refresh once its time has expired, 60 minutes."
		},
		{
			"name": "Get Paid",
			"item": [
				{
					"name": "Request To Pay",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "fdcf010b-a1d3-47e9-935e-08709fa610c9",
								"exec": [
									"var ReferenceId = pm.environment.replaceIn(\"{{$guid}}\");\r",
									"pm.environment.set('Request_ID_Debit', ReferenceId);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "71a90ea6-edca-4cd5-9a57-950fae6513a1",
								"exec": [
									"var request = JSON.parse(pm.request.body.raw);\r",
									"pm.test(\"X-Target-Environment header is set to 'sandbox' or for production set 'mtn'+'country'\", function () {\r",
									"    const targetEnvironment = pm.request.headers.get('X-Target-Environment');\r",
									"    pm.expect(targetEnvironment).to.satisfy(value => value === 'mtn'+'country)' || value === 'sandbox');\r",
									"});\r",
									"\r",
									"pm.test(\"X-Reference-Id header is UUID string formated\", function (){\r",
									"const xreferenceid =   pm.request.headers.get('X-Reference-Id');\r",
									"xreferenceid.match('^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$');\r",
									"});\r",
									"\r",
									"pm.test(\"Request body has the required fields and not empty\", function () {\r",
									"    pm.expect(request.externalId).to.exist.and.to.not.be.empty;\r",
									"    pm.expect(request.amount).to.exist.and.to.not.be.empty;\r",
									"    pm.expect(request.currency).to.exist.and.to.not.be.empty;\r",
									"    pm.expect(request.payer.partyId).to.exist.and.to.not.be.empty;\r",
									"    pm.expect(request.payer.partyIdType).to.exist.and.to.not.be.empty;\r",
									"    pm.expect(request.payerMessage).to.exist.and.to.not.be.empty;\r",
									"    pm.expect(request.payeeNote).to.exist.and.to.not.be.empty;    \r",
									"});\r",
									"\r",
									"pm.test(\"Payer partyIdType and partyId are not empty\", function () {\r",
									"  pm.expect(request.payer.partyIdType).to.exist.and.to.not.be.empty;  \r",
									"  pm.expect(request.payer.partyId).to.exist.and.to.not.be.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"Payer partyIdType is MSISDN or ALIAS or EMAIL\", function () {\r",
									"  pm.expect(request.payer.partyIdType).to.satisfy(value => value === 'MSISDN' || value === 'ALIAS' || value === 'EMAIL');\r",
									"});\r",
									"\r",
									"pm.test(\"PayeeNote and payerMessage have no special characters\",\r",
									" function () {\r",
									"pm.expect(/^[ 0-9a-zA-Z\\-_]+$/.test(request.payeeNote)).to.be.true &\r",
									"pm.expect(/^[ 0-9a-zA-Z\\-_]+$/.test(request.payerMessage)).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Currency is EUR, for prodcution use country currency\", function () {\r",
									"  pm.expect(request.currency).to.satisfy(value => value === 'EUR');\r",
									"});\r",
									"\r",
									"pm.test(\"Request contains a Bearer token in the Authorization header\", function() {\r",
									"    pm.expect(pm.request.headers.get('Authorization')).to.include('Bearer');\r",
									"});\r",
									"\r",
									"pm.test(\"payeeNote is not more than 160 characters\", function () \r",
									"{ pm.expect(request.payeeNote).length.to.be.not.above(160); });\r",
									"\r",
									"pm.test(\"payerMessage is not more than 160 characters\", function () \r",
									"{ pm.expect(request.payerMessage).length.to.be.not.above(160); });\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "9b71cefd-ca06-4447-851f-3f96960ddf49",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Access_Token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Reference-Id",
								"value": "{{Request_ID_Debit}}",
								"description": "UUID V4 string to identify the request (Unique for each request)"
							},
							{
								"key": "X-Target-Environment",
								"value": "{{Target_Environment}}",
								"description": "Environment (sandbox or production syntax == mtn+country) "
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "Specify the nature of the data in the body of a request"
							},
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{Collection_Subscription-Key}}",
								"description": "Product primary subscription key, from momodeveloper.mtn.com"
							},
							{
								"key": "X-Callback-Url",
								"value": "{{CallbackURL}}",
								"description": "endpoint url  to receive transaction  status for (Failed or Successful) POST and PUT"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"amount\": \"600\",\r\n  \"currency\": \"EUR\",\r\n  \"externalId\": \"00004335\",\r\n  \"payer\": {\r\n    \"partyIdType\": \"MSISDN\",\r\n    \"partyId\": \"{{MSISDN}}\"\r\n  },\r\n  \"payerMessage\": \"MoMo Market Payment\",\r\n  \"payeeNote\": \"MoMo Market Payment\"\r\n}"
						},
						"url": "{{base_url}}/collection/v1_0/requesttopay",
						"description": "### Create Request To Pay\n\nThis endpoint allows the client to initiate a request to pay.\n\n<img src=\"https://content.pstmn.io/a3cdfa70-6092-4227-88e3-b40eeb35749b/aW1hZ2UucG5n\" width=\"600\" height=\"260\">\n\n#### Request Body\n\n- `amount` (string): The amount to be requested.\n    \n- `currency` (string): The currency in which the amount is requested.\n    \n- `externalId` (string): The unique identifier for the request.\n    \n- `payer` (object):\n    \n    - `partyIdType` (string): The type of party ID for the payer.(MSISDN/ALIAS/EMAIL)\n        \n    - `partyId` (string): The ID of the payer.\n        \n- `payerMessage` (string): Message from the payer.\n    \n- `payeeNote` (string): Note for the payee.\n    \n\n#### Response (JSON Schema)\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"requestId\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```\n\n#### Request Body Example\n\n``` json\n{\n  \"amount\": \"\",\n  \"currency\": \"\",\n  \"externalId\": \"\",\n  \"payer\": {\n    \"partyIdType\": \"\",\n    \"partyId\": \"\"\n  },\n  \"payerMessage\": \"\",\n  \"payeeNote\": \"\"\n}\n\n ```"
					},
					"response": [
						{
							"id": "29c02e4f-a97c-4187-8f9c-775d1d67cb7a",
							"name": "Request To Pay",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Reference-Id",
										"value": "2f209631-07d4-4254-8d6a-bd0f1ef78538",
										"description": "UUID V4 string to identify the request (Unique for each request)"
									},
									{
										"key": "X-Target-Environment",
										"value": "sandbox",
										"description": "Environment (sandbox or production syntax == mtn+country) "
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "Specify the nature of the data in the body of a request"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "bca0c92d326a46cd885f443d51b859f1",
										"description": "Product primary subscription key, from momodeveloper.mtn.com"
									},
									{
										"key": "X-Callback-Url",
										"value": "https://webhook.site/mywebhooksandbox",
										"description": "endpoint url  to receive transaction  status for (Failed or Successful) POST and PUT"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"amount\": \"600\",\r\n  \"currency\": \"EUR\",\r\n  \"externalId\": \"00004335\",\r\n  \"payer\": {\r\n    \"partyIdType\": \"MSISDN\",\r\n    \"partyId\": \"56733123450\"\r\n  },\r\n  \"payerMessage\": \"MoMo Market Payment\",\r\n  \"payeeNote\": \"MoMo Market Payment\"\r\n}"
								},
								"url": "https://sandbox.momodeveloper.mtn.com/collection/v1_0/requesttopay"
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"responseTime": null,
							"body": ""
						}
					]
				},
				{
					"name": "Status Request To Pay ",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a0e67b65-bde5-4936-9acd-05178e77a80c",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2e842522-dc7b-4c47-abc5-98da4cae1c2f",
								"exec": [
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.financialTransactionId).to.exist;\r",
									"    pm.expect(responseData.externalId).to.exist;\r",
									"    pm.expect(responseData.amount).to.exist;\r",
									"    pm.expect(responseData.currency).to.exist;\r",
									"    pm.expect(responseData.payer).to.exist;\r",
									"    pm.expect(responseData.payerMessage).to.exist;\r",
									"    pm.expect(responseData.payeeNote).to.exist;\r",
									"    pm.expect(responseData.status).to.exist;\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Payer partyIdType and partyId are not empty\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  \r",
									"  pm.expect(responseData).to.be.an('object');\r",
									"  pm.expect(responseData.payer.partyIdType).to.exist.and.to.not.be.empty;\r",
									"  pm.expect(responseData.payer.partyId).to.exist.and.to.not.be.empty;\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"PayeeNote is a non-empty string\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.payeeNote).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Request contains a Bearer token in the Authorization header\", function() {\r",
									"    pm.expect(pm.request.headers.get('Authorization')).to.include('Bearer');\r",
									"});\r",
									"\r",
									"pm.test(\"X-Target-Environment header is set to either 'production' or 'sandbox'\", function () {\r",
									"    const targetEnvironment = pm.request.headers.get('X-Target-Environment');\r",
									"    pm.expect(targetEnvironment).to.satisfy(value => value === 'mtn+momocountry)' || value === 'sandbox');\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "7f37df44-0447-451f-b510-9a8cedd71971",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Access_Token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Target-Environment",
								"value": "{{Target_Environment}}"
							},
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{Collection_Subscription-Key}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/collection/v1_0/requesttopay/:Request_ID_Debit",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"collection",
								"v1_0",
								"requesttopay",
								":Request_ID_Debit"
							],
							"variable": [
								{
									"key": "Request_ID_Debit",
									"value": "{{Request_ID_Debit}}",
									"description": "Request Id of the debit request Posted"
								}
							]
						},
						"description": "### Retrieve Request To Pay Response\n\nThis endpoint retrieves the response for a specific request to pay, identified by the unique Request_ID_Debit.\n\n<img src=\"https://content.pstmn.io/f9947648-f5cc-47cf-9c8b-bc4976f04682/aW1hZ2UucG5n\" width=\"2432\" height=\"300\">\n\n#### Request\n\n- Method: GET\n    \n- URL: `{{base_url}}/collection/v1_0/requesttopay/:Request_ID_Debit`\n    \n\n#### Response Body\n\nThe response is provided in JSON format and follows the schema below:\n\n``` json\n{ \n  \"type\": \"object\",\n  \"properties\": {\n    \"property1\": {\n      \"type\": \"string\"\n    },\n    \"property2\": {\n      \"type\": \"number\"\n    },\n    ...\n  }\n}\n\n ```"
					},
					"response": [
						{
							"id": "7f29851f-0be0-42d2-89b3-7e10c1bd8f2a",
							"name": "Status Request To Pay",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Target-Environment",
										"value": "sandbox"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "bca0c92d326a46cd885f443d51b859f1"
									}
								],
								"url": {
									"raw": "https://sandbox.momodeveloper.mtn.com/collection/v1_0/requesttopay/:Request_ID_Debit",
									"protocol": "https",
									"host": [
										"sandbox",
										"momodeveloper",
										"mtn",
										"com"
									],
									"path": [
										"collection",
										"v1_0",
										"requesttopay",
										":Request_ID_Debit"
									],
									"variable": [
										{
											"key": "Request_ID_Debit",
											"value": "2f209631-07d4-4254-8d6a-bd0f1ef78538",
											"description": "Request Id of the debit request Posted"
										}
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"responseTime": null,
							"body": ""
						}
					]
				},
				{
					"name": " Notification",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4e30fa87-25ab-4064-8df2-1db6fe7cca89",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "160653ca-4398-4507-958f-3e2f8282e99d",
								"exec": [
									"var request = JSON.parse(pm.request.body.raw);\r",
									"pm.test(\"X-Target-Environment header is set to 'sandbox' or for production set 'mtn'+'country'\", function () {\r",
									"    const targetEnvironment = pm.request.headers.get('X-Target-Environment');\r",
									"    pm.expect(targetEnvironment).to.satisfy(value => value === 'mtn'+'country)' || value === 'sandbox');\r",
									"});\r",
									"\r",
									"pm.test(\"Ocp-Apim-Subscription-Key is equal to Collection_Subscription Key\", \r",
									"function () {\r",
									"    const subscriptionkey = pm.request.headers.get('Ocp-Apim-Subscription-Key');\r",
									"   pm.expect(subscriptionkey).to.satisfy(value => value === pm.environment.get('Collection_Subscription-Key'));   \r",
									"} \r",
									");\r",
									"\r",
									"pm.test(\"Request body has notificationMessage\", function () {\r",
									"    pm.expect(request.notificationMessage).to.exist.and.to.not.be.empty;   \r",
									"});\r",
									"\r",
									"pm.test(\"notificationMessage is not more than 160 characters\", function () \r",
									"{ pm.expect(request.notificationMessage).length.to.be.not.above(160); });\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "badba825-08b8-4b85-9b29-3f9a2a55dc03",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Access_Token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Target-Environment",
								"value": "{{Target_Environment}}",
								"description": "Environment (sandbox or production syntax == mtn+country) "
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{Collection_Subscription-Key}}",
								"description": "Product primary subscription key, from momodeveloper.mtn.com"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"notificationMessage\": \"Thank You for using MoMo o\"\r\n}"
						},
						"url": "{{base_url}}/collection/v1_0/requesttopay/{{Request_ID_Debit}}/deliverynotification",
						"description": "\nThis endpoint is used to send a delivery notification for a specific request to pay. The HTTP POST request should be made to {{base_url}}/collection/v1_0/requesttopay/{{Request_ID_Debit}}/deliverynotification.\n\n### Request Body\nThe request body should be in raw format and include the following parameter:\n- `notificationMessage`: (string) The message for the delivery notification.\n\n### Response\nThe response will include the relevant details of the delivery notification request.\n\n### Headers\nInclude any necessary headers required for authentication or other purposes when making the request.\n"
					},
					"response": [
						{
							"id": "c5f37208-2b4a-470d-9683-3fcd4abf5399",
							"name": "Notification",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Target-Environment",
										"value": "sandbox",
										"description": "Environment (sandbox or production syntax == mtn+country) "
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "bca0c92d326a46cd885f443d51b859f1",
										"description": "Product primary subscription key, from momodeveloper.mtn.com"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"notificationMessage\": \"Thank You for using MoMo\"\r\n}"
								},
								"url": "https://sandbox.momodeveloper.mtn.com/collection/v1_0/requesttopay/2f209631-07d4-4254-8d6a-bd0f1ef78538/deliverynotification"
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"responseTime": null,
							"body": ""
						}
					]
				},
				{
					"name": "Refund",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "625c2089-cdb7-4f39-833a-b9d0f5ed7df2",
								"exec": [
									"var ReferenceId = pm.environment.replaceIn(\"{{$guid}}\");\r",
									"pm.environment.set('Request_ID_Refund', ReferenceId);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f1291ef3-230f-4916-8191-f245fa9f0fcf",
								"exec": [
									"var request = JSON.parse(pm.request.body.raw);\r",
									"pm.test(\"X-Target-Environment header is set to 'sandbox' or for production set 'mtn'+'country'\", function () {\r",
									"    const targetEnvironment = pm.request.headers.get('X-Target-Environment');\r",
									"    pm.expect(targetEnvironment).to.satisfy(value => value === 'mtn'+'country)' || value === 'sandbox');\r",
									"});\r",
									"\r",
									"pm.test(\"X-Reference-Id header is UUID string formated\", function (){\r",
									"const xreferenceid =   pm.request.headers.get('X-Reference-Id');\r",
									"xreferenceid.match('^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$');\r",
									"});\r",
									"\r",
									"pm.test(\"Request body has the required fields and not empty\", function () {\r",
									"    pm.expect(request.externalId).to.exist.and.to.not.be.empty;\r",
									"    pm.expect(request.amount).to.exist.and.to.not.be.empty;\r",
									"    pm.expect(request.currency).to.exist.and.to.not.be.empty;\r",
									"    pm.expect(request.payerMessage).to.exist.and.to.not.be.empty;\r",
									"    pm.expect(request.payeeNote).to.exist.and.to.not.be.empty;  \r",
									"    pm.expect(request.referenceIdToRefund).to.exist.and.to.not.be.empty;   \r",
									"});\r",
									"\r",
									"pm.test(\"referenceIdToRefund in the body is equal to X-Reference-Id of the  Debit and UUID Valid\", function (){\r",
									"pm.expect(/^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/.test(request.referenceIdToRefund)).to.be.true &\r",
									"pm.expect(request.referenceIdToRefund).to.satisfy(value => value === pm.environment.get('Request_ID_Debit'));\r",
									"});\r",
									"\r",
									"pm.test(\"PayeeNote and payerMessage have no special characters\",\r",
									" function () {\r",
									"pm.expect(/^[ 0-9a-zA-Z\\-_]+$/.test(request.payeeNote)).to.be.true &\r",
									"pm.expect(/^[ 0-9a-zA-Z\\-_]+$/.test(request.payerMessage)).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Currency is EUR, for prodcution use country currency\", function () {\r",
									"  pm.expect(request.currency).to.satisfy(value => value === 'EUR');\r",
									"});\r",
									"\r",
									"pm.test(\"payeeNote is not more than 160 characters\", function () \r",
									"{ pm.expect(request.payeeNote).length.to.be.not.above(160); });\r",
									"\r",
									"pm.test(\"payerMessage is not more than 160 characters\", function () \r",
									"{ pm.expect(request.payerMessage).length.to.be.not.above(160); });\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "3d25deb5-ec5f-4885-ada2-306657392782",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Access_Token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Callback-Url",
								"value": "{{CallbackURL}}",
								"description": "endpoint url  to receive transaction  status for (Failed or Successful) POST and PUT"
							},
							{
								"key": "X-Reference-Id",
								"value": "{{Request_ID_Refund}}",
								"description": "UUID V4 string to identify the request (Unique for each request)"
							},
							{
								"key": "X-Target-Environment",
								"value": "{{Target_Environment}}",
								"description": "Environment (sandbox or production syntax == mtn+country) "
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "Specify the nature of the data in the body of a request"
							},
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{Disbursement_Subscription-Key}}",
								"description": "Product primary subscription key, from momodeveloper.mtn.com"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"amount\": \"300\",\r\n  \"currency\": \"EUR\",\r\n  \"externalId\": \"Refund_uibi\",\r\n  \"payerMessage\": \"Refund for MoMo Market Payment\",\r\n  \"payeeNote\": \"Refund for MoMo Market Payment\",\r\n  \"referenceIdToRefund\": \"{{Request_ID_Debit}}\"\r\n}"
						},
						"url": "{{base_url}}/disbursement/v1_0/refund",
						"description": "\n### Refund Disbursement\nThis endpoint allows the user to initiate a refund for a previous disbursement.\n\n#### Request Body\n- `amount` (string): The amount to be refunded.\n- `currency` (string): The currency in which the refund amount is specified.\n- `externalId` (string): The external identifier for the refund transaction.\n- `payerMessage` (string): Message to be displayed to the payer (optional).\n- `payeeNote` (string): Note to be displayed to the payee (optional).\n- `referenceIdToRefund` (string): The reference ID of the disbursement to be refunded.\n\n#### Response\nThe response will contain the status of the refund initiation and any relevant details.\n\n#### Headers\nInclude the necessary headers for authorization and content type.\n\n#### Other Details\nEnsure that the required authorization and content type headers are included in the request.\n"
					},
					"response": [
						{
							"id": "8cd7eb18-0d5f-459b-b1d0-06e5c3a11592",
							"name": "Refund",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Callback-Url",
										"value": "https://webhook.site/mywebhooksandbox",
										"description": "endpoint url  to receive transaction  status for (Failed or Successful) POST and PUT"
									},
									{
										"key": "X-Reference-Id",
										"value": "85c66b88-abb8-4523-a81d-2d5566816c70",
										"description": "UUID V4 string to identify the request (Unique for each request)"
									},
									{
										"key": "X-Target-Environment",
										"value": "sandbox",
										"description": "Environment (sandbox or production syntax == mtn+country) "
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "Specify the nature of the data in the body of a request"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "0fd9826a39aa468fb311d23fc08a55fc",
										"description": "Product primary subscription key, from momodeveloper.mtn.com"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"amount\": \"300\",\r\n  \"currency\": \"EUR\",\r\n  \"externalId\": \"Refund_uibi\",\r\n  \"payerMessage\": \"Refund for MoMo Market Payment\",\r\n  \"payeeNote\": \"Refund for MoMo Market Payment\",\r\n  \"referenceIdToRefund\": \"2f209631-07d4-4254-8d6a-bd0f1ef78538\"\r\n}"
								},
								"url": "https://sandbox.momodeveloper.mtn.com/disbursement/v1_0/refund"
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"responseTime": null,
							"body": ""
						}
					]
				},
				{
					"name": "Refund Status",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "584f08eb-082b-4a4d-98cd-02a11c1626ac"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.financialTransactionId).to.exist;\r",
									"    pm.expect(responseData.externalId).to.exist;\r",
									"    pm.expect(responseData.amount).to.exist;\r",
									"    pm.expect(responseData.currency).to.exist;\r",
									"    pm.expect(responseData.payee).to.exist;\r",
									"    pm.expect(responseData.payerMessage).to.exist;\r",
									"    pm.expect(responseData.payeeNote).to.exist;\r",
									"    pm.expect(responseData.status).to.exist;\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Payee object has the required fields\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.payee).to.be.an('object');\r",
									"    pm.expect(responseData.payee.partyIdType).to.exist.and.to.be.a('string');\r",
									"    pm.expect(responseData.payee.partyId).to.exist.and.to.be.a('string');\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"X-Target-Environment header is present and has a valid value\", function () {\r",
									"    pm.expect(pm.request.headers.get(\"X-Target-Environment\")).to.exist;\r",
									"    pm.expect(pm.request.headers.get(\"X-Target-Environment\")).to.match(/^(sandbox|production(mtn+country))$/);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Ocp-Apim-Subscription-Key header is present and has a non-empty value\", function () {\r",
									"    pm.expect(pm.request.headers.get(\"Ocp-Apim-Subscription-Key\")).to.exist.and.to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "58419982-8f11-4e51-812e-8df6f0dca1ce"
							}
						}
					],
					"id": "e848d9d9-e48c-47d1-8a62-9de05f6786f5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Access_Token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Target-Environment",
								"value": "{{Target_Environment}}",
								"description": "Environment (sandbox or production syntax == mtn+country) "
							},
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{Disbursement_Subscription-Key}}",
								"description": "Product primary subscription key, from momodeveloper.mtn.com"
							}
						],
						"url": {
							"raw": "{{base_url}}/disbursement/v1_0/refund/:Request_ID_Refund",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"disbursement",
								"v1_0",
								"refund",
								":Request_ID_Refund"
							],
							"variable": [
								{
									"id": "9a38af45-6408-4652-b94c-42bf82a4fcc5",
									"key": "Request_ID_Refund",
									"value": "{{Request_ID_Refund}}"
								}
							]
						},
						"description": "\n### GET /disbursement/v1_0/refund/:Request_ID_Refund\n\nThis endpoint is used to check the status of a refund by providing the `Request_ID_Refund`, which is also mapped as the `X-Reference-Id` in the Refund Request.\n\n#### Headers\n- **X-Target-Environment** (string, required): The identifier specifying the country the request is meant for, where the transaction shall be processed. Use `sandbox` for testing and the production environment for live transactions.\n- **Ocp-Apim-Subscription-Key** (string, required): Subscription key providing access to this API. It can be found in your [Profile](https://momodeveloper.mtn.com/developer). (Refund utilizes the Disbursement Subscription Key because it's a Disburse/Transfer).\n\n#### Response (JSON Schema)\nThe response of this request is documented as a JSON schema.\n"
					},
					"response": [
						{
							"id": "cf0acc19-d81a-459a-a816-af3de83f5c93",
							"name": "Refund Status",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Target-Environment",
										"value": "sandbox",
										"description": "Environment (sandbox or production syntax == mtn+country) "
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "0fd9826a39aa468fb311d23fc08a55fc",
										"description": "Product primary subscription key, from momodeveloper.mtn.com"
									}
								],
								"url": {
									"raw": "https://sandbox.momodeveloper.mtn.com/disbursement/v1_0/refund/:Request_ID_Refund",
									"protocol": "https",
									"host": [
										"sandbox",
										"momodeveloper",
										"mtn",
										"com"
									],
									"path": [
										"disbursement",
										"v1_0",
										"refund",
										":Request_ID_Refund"
									],
									"variable": [
										{
											"key": "Request_ID_Refund",
											"value": "85c66b88-abb8-4523-a81d-2d5566816c70"
										}
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"responseTime": null,
							"body": ""
						}
					]
				}
			],
			"id": "5f27f2c8-90ed-4dd1-bb77-21129b748f77",
			"description": "MoMo get paid APIs enable businesses to collect payments from consumers and businesses in different ways.  \nPartners initiate instant payment within any digital platform (website, mobile application) through MoMo channels.  \nFolder also includes a set of capabilities that enhance value and offer an excellent customer experience. These include: Refund, Notification,\n\n1. [Request Payment (Debit)](https://www.postman.com/momoapis/workspace/66fe3943-b010-4047-ad82-618785225cc8/request/28452721-9b71cefd-ca06-4447-851f-3f96960ddf49?action=share&source=copy-link&creator=28452721&ctx=documentation)\n    \n2. [Notify (Notification)](https://www.postman.com/momoapis/workspace/66fe3943-b010-4047-ad82-618785225cc8/request/28452721-badba825-08b8-4b85-9b29-3f9a2a55dc03?action=share&source=copy-link&creator=28452721&ctx=documentation)\n    \n3. [Refund (Refund Payment)](https://www.postman.com/momoapis/workspace/66fe3943-b010-4047-ad82-618785225cc8/request/28452721-3d25deb5-ec5f-4885-ada2-306657392782?action=share&source=copy-link&creator=28452721&ctx=documentation)"
		},
		{
			"name": "Payment",
			"item": [
				{
					"name": "Create Payment",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "87b56785-5ccf-46a1-b04b-308eb5698e05",
								"exec": [
									"var ReferenceId = pm.variables.replaceIn(\"{{$guid}}\");\r",
									"pm.environment.set('Request_ID_Payment', ReferenceId);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "bb3617d7-d8e8-4bf3-9c66-2c41260260b3",
								"exec": [
									"var request = JSON.parse(pm.request.body.raw);",
									"",
									"pm.test(\"Response should not be null\", function () {",
									"    pm.expect(pm.response.text()).to.not.equal(null);",
									"});",
									"",
									"pm.test(\"senderNote is not more than 160 characters\", function () ",
									"{ pm.expect(request.senderNote).length.to.be.not.above(160); });",
									"",
									"pm.test(\"receiverMessage is not more than 160 characters\", function () ",
									"{ pm.expect(request.receiverMessage).length.to.be.not.above(160); });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "fbb8561b-9e91-4809-8640-aac760dec0ee",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						},
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Access_Token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Callback-Url",
								"value": "{{CallbackURL}}",
								"description": "endpoint url  to receive transaction  status for (Failed or Successful) POST and PUT"
							},
							{
								"key": "X-Reference-Id",
								"value": "{{Request_ID_Payment}}",
								"description": "UUID V4 string to identify the request (Unique for each request)"
							},
							{
								"key": "X-Target-Environment",
								"value": "{{Target_Environment}}",
								"description": "Environment (sandbox or production syntax == mtn+country)"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "Specify the nature of the data in the body of a request"
							},
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{Collection_Subscription-Key}}",
								"description": "Product primary subscription key, from momodeveloper.mtn.com"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"externalTransactionId\": \"457373\",\r\n  \"money\": {\r\n    \"amount\": \"2000\",\r\n    \"currency\": \"EUR\"\r\n  },\r\n  \"customerReference\": \"561551442\",\r\n  \"serviceProviderUserName\": \"WaterProvider\",\r\n  \"couponId\": \"203\",\r\n  \"productId\": \"Monthly Payments\",\r\n  \"productOfferingId\": \"788\",\r\n  \"receiverMessage\": \"Thank You \",\r\n  \"senderNote\": \"Thank You\",\r\n  \"maxNumberOfRetries\": \"2\",\r\n  \"includeSenderCharges\": \"1\"\r\n}"
						},
						"url": "https://sandbox.momodeveloper.mtn.com/collection/v2_0/payment",
						"description": "### Request\n\nThis API endpoint is used to initiate a payment collection by making an HTTP POST request to the specified URL. The request should include a payload in the raw request body\n\n### Request Body\n\n- `externalTransactionId` (text): The ID of the external transaction.\n    \n- `money.amount` (text): The amount of the payment.\n    \n- `money.currency` (text): The currency of the payment.\n    \n- `customerReference` (text): Reference to the customer initiating the payment.\n    \n- `serviceProviderUserName` (text): Username of the service provider.\n    \n- `couponId` (text): ID of the coupon, if applicable.\n    \n- `productId` (text): ID of the product.\n    \n- `productOfferingId` (text): ID of the product offering.\n    \n- `receiverMessage` (text): Message for the receiver of the payment.\n    \n- `senderNote` (text): Note from the sender of the payment.\n    \n- `maxNumberOfRetries` (text): Maximum number of retries for the payment.\n    \n- `includeSenderCharges` (text): Indicator whether to include sender charges.\n    \n\n### Response\n\nThe response of this request is a text/xml content with status 202.\n\n### Headers\n\nThe request may require specific headers for authentication or other purposes. Please refer to the API documentation for the required headers.\n\n### Other Details\n\nAny other specific details related to the request and response will be available in the API documentation provided by the service provider."
					},
					"response": [
						{
							"id": "7933aef8-7ce2-4028-a76f-d6a320e7d2fb",
							"name": "Create Payment",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Callback-Url",
										"value": "https://webhook.site/mywebhooksandbox",
										"description": "endpoint url  to receive transaction  status for (Failed or Successful) POST and PUT"
									},
									{
										"key": "X-Reference-Id",
										"value": "",
										"description": "UUID V4 string to identify the request (Unique for each request)"
									},
									{
										"key": "X-Target-Environment",
										"value": "sandbox",
										"description": "Environment (sandbox or production syntax == mtn+country)"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "Specify the nature of the data in the body of a request"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "bca0c92d326a46cd885f443d51b859f1",
										"description": "Product primary subscription key, from momodeveloper.mtn.com"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"externalTransactionId\": \"457373\",\r\n  \"money\": {\r\n    \"amount\": \"2000\",\r\n    \"currency\": \"EUR\"\r\n  },\r\n  \"customerReference\": \"561551442\",\r\n  \"serviceProviderUserName\": \"WaterProvider\",\r\n  \"couponId\": \"203\",\r\n  \"productId\": \"Monthly Payments\",\r\n  \"productOfferingId\": \"788\",\r\n  \"receiverMessage\": \"Thank You \",\r\n  \"senderNote\": \"Thank You\",\r\n  \"maxNumberOfRetries\": \"2\",\r\n  \"includeSenderCharges\": \"1\"\r\n}"
								},
								"url": "https://sandbox.momodeveloper.mtn.com/collection/v2_0/payment"
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"responseTime": null,
							"body": ""
						}
					]
				},
				{
					"name": "Get Payment Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response body has the required fields - referenceId, status, and reason\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.referenceId).to.exist;\r",
									"    pm.expect(responseData.status).to.exist;\r",
									"    pm.expect(responseData.reason).to.exist;\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"ReferenceId is a non-empty string\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.referenceId).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Status is in a valid format\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  \r",
									"  pm.expect(responseData).to.be.an('object');\r",
									"  pm.expect(responseData.status).to.be.a('string', \"Status should be a string\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Reason is a non-empty string\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  \r",
									"  pm.expect(responseData).to.be.an('object');\r",
									"  pm.expect(responseData.reason).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Reason should not be empty\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "1d801cb0-6e86-435a-874a-bcc33195a15d"
							}
						}
					],
					"id": "09ccd8e4-cdfc-4db7-9d1b-0675a7ed1c8a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Access_Token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Target-Environment",
								"value": "{{Target_Environment}}"
							},
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{Collection_Subscription-Key}}"
							}
						],
						"url": {
							"raw": "https://sandbox.momodeveloper.mtn.com/collection/v2_0/payment/:Request_ID_Payment",
							"protocol": "https",
							"host": [
								"sandbox",
								"momodeveloper",
								"mtn",
								"com"
							],
							"path": [
								"collection",
								"v2_0",
								"payment",
								":Request_ID_Payment"
							],
							"variable": [
								{
									"id": "e7520da5-8208-47ae-89d8-8e5d2966b398",
									"key": "Request_ID_Payment",
									"value": "{{Request_ID_Payment}}"
								}
							]
						},
						"description": "\n### Retrieve Payment Response\nThis endpoint retrieves the response for a specific payment request identified by the provided Request ID.\n\n#### Request\n- Method: GET\n- URL: `https://sandbox.momodeveloper.mtn.com/collection/v2_0/payment/:Request_ID_Payment`\n\n#### Response\n- Status: 200\n- Content-Type: application/json\n- Body:\n    ```json\n    {\n        \"referenceId\":\"\",\n        \"status\":\"\",\n        \"reason\":\"\"\n    }\n    ```\n"
					},
					"response": [
						{
							"id": "44c36d4b-d277-46c8-b61f-b8085d467028",
							"name": "Get Payment Status",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Target-Environment",
										"value": "sandbox"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "bca0c92d326a46cd885f443d51b859f1"
									}
								],
								"url": {
									"raw": "https://sandbox.momodeveloper.mtn.com/collection/v2_0/payment/:Request_ID_Payment",
									"protocol": "https",
									"host": [
										"sandbox",
										"momodeveloper",
										"mtn",
										"com"
									],
									"path": [
										"collection",
										"v2_0",
										"payment",
										":Request_ID_Payment"
									],
									"variable": [
										{
											"key": "Request_ID_Payment",
											"value": ""
										}
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"responseTime": null,
							"body": ""
						}
					]
				}
			],
			"id": "c52bfee3-170e-48a4-b95d-1dcb52dcbe8f",
			"description": "Payment API, enables a Business to streamline utility payments and initiate services like airtime and bundle activation through MoMo."
		},
		{
			"name": "Pay",
			"item": [
				{
					"name": "Transfer",
					"item": [
						{
							"name": "Transfer",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ddc808db-691e-42bf-b191-afbf0c1e8abc",
										"exec": [
											"\r",
											"var ReferenceId = pm.environment.replaceIn(\"{{$guid}}\");\r",
											"pm.environment.set('Request_ID_Transfer', ReferenceId);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ec72db32-0f24-4e4f-881b-b914993f6aa6",
										"exec": [
											"var request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"X-Target-Environment header is set to 'sandbox' or for production set 'mtn'+'country'\", function () {\r",
											"    const targetEnvironment = pm.request.headers.get('X-Target-Environment');\r",
											"    pm.expect(targetEnvironment).to.satisfy(value => value === 'mtn'+'country)' || value === 'sandbox');\r",
											"});\r",
											"\r",
											"pm.test(\"X-Reference-Id header is UUID string formated\", function (){\r",
											"const xreferenceid =   pm.request.headers.get('X-Reference-Id');\r",
											"xreferenceid.match('^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$');\r",
											"});\r",
											"\r",
											"pm.test(\"Request body has the required fields and not empty\", function () {\r",
											"    pm.expect(request.externalId).to.exist.and.to.not.be.empty;\r",
											"    pm.expect(request.amount).to.exist.and.to.not.be.empty;\r",
											"    pm.expect(request.currency).to.exist.and.to.not.be.empty;\r",
											"    pm.expect(request.payee.partyId).to.exist.and.to.not.be.empty;\r",
											"    pm.expect(request.payee.partyIdType).to.exist.and.to.not.be.empty;\r",
											"    pm.expect(request.payerMessage).to.exist.and.to.not.be.empty;\r",
											"    pm.expect(request.payeeNote).to.exist.and.to.not.be.empty;    \r",
											"});\r",
											"\r",
											"pm.test(\"payee partyIdType and partyId are not empty\", function () {\r",
											"  pm.expect(request.payee.partyIdType).to.exist.and.to.not.be.empty;  \r",
											"  pm.expect(request.payee.partyId).to.exist.and.to.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"payee partyIdType is MSISDN or ALIAS\", function () {\r",
											"  pm.expect(request.payee.partyIdType).to.satisfy(value => value === 'MSISDN' || value === 'ALIAS');\r",
											"});\r",
											"\r",
											"pm.test(\"PayeeNote and payeeMessage have no special characters\",\r",
											" function () {\r",
											"pm.expect(/^[ 0-9a-zA-Z\\-_]+$/.test(request.payeeNote)).to.be.true &\r",
											"pm.expect(/^[ 0-9a-zA-Z\\-_]+$/.test(request.payeeMessage)).to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Currency is EUR, for prodcution use country currency\", function () {\r",
											"  pm.expect(request.currency).to.satisfy(value => value === 'EUR');\r",
											"});\r",
											"\r",
											"pm.test(\"Request contains a Bearer token in the Authorization header\", function() {\r",
											"    pm.expect(pm.request.headers.get('Authorization')).to.include('Bearer');\r",
											"});\r",
											"\r",
											"pm.test(\"payeeNote is not more than 160 characters\", function () \r",
											"{ pm.expect(request.payeeNote).length.to.be.not.above(160); });\r",
											"\r",
											"pm.test(\"payerMessage is not more than 160 characters\", function () \r",
											"{ pm.expect(request.payerMessage).length.to.be.not.above(160); });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "cf2b00b7-7180-4cff-8274-8e2dd75caca9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Access_Token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Callback-Url",
										"value": "{{CallbackURL}}"
									},
									{
										"key": "X-Reference-Id",
										"value": "{{Request_ID_Transfer}}"
									},
									{
										"key": "X-Target-Environment",
										"value": "{{Target_Environment}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{Disbursement_Subscription-Key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"amount\": \"5900\",\r\n  \"currency\": \"EUR\",\r\n  \"externalId\": \"890695\",\r\n  \"payee\": {\r\n    \"partyIdType\": \"MSISDN\",\r\n    \"partyId\": \"{{MSISDN}}\"\r\n  },\r\n  \"payerMessage\": \"Salary Payment April 2023\",\r\n  \"payeeNote\": \"Salary Payment April 2023\"\r\n}"
								},
								"url": "{{base_url}}/disbursement/v1_0/transfer",
								"description": "<img src=\"https://content.pstmn.io/c1d7230e-0072-47c1-a4b2-a4a265dc69b2/aW1hZ2UucG5n\" width=\"2432\" height=\"300\">\n\n### Request Body\n\n- `amount` (string) - The amount to be transferred.\n    \n- `currency` (string) - The currency in which the amount is specified.\n    \n- `externalId` (string) - An ID to uniquely identify the transfer.\n    \n- `payee` (object) - Information about the payee.\n    \n    - `partyIdType` (string) - Type of ID for the payee.\n        \n    - `partyId` (string) - ID of the payee.\n        \n- `payerMessage` (string) - Message from the payer.\n    \n- `payeeNote` (string) - Note for the payee.\n    \n\n### Response\n\nThe response for this request is a JSON schema, which will be in the format specified by the Content-Type header. The last execution returned a status of 202 with Content-Type as text/xml. As per the user's request, the response should be documented as a JSON schema.\n\n### Headers\n\n- `Content-Type` - The format of the response.\n    \n\n### Other\n\n- This API endpoint allows you to initiate a transfer for disbursement. The request should be sent as an HTTP POST to {{base_url}}/disbursement/v1_0/transfer."
							},
							"response": [
								{
									"id": "47a5ed3c-901e-4e1f-a3fe-7e40f9cbabb9",
									"name": "Transfer",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Callback-Url",
												"value": "https://webhook.site/mywebhooksandbox"
											},
											{
												"key": "X-Reference-Id",
												"value": "1077fbc2-9253-437f-883c-30e248bc635d"
											},
											{
												"key": "X-Target-Environment",
												"value": "sandbox"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "0fd9826a39aa468fb311d23fc08a55fc"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"amount\": \"5900\",\r\n  \"currency\": \"EUR\",\r\n  \"externalId\": \"890695\",\r\n  \"payee\": {\r\n    \"partyIdType\": \"MSISDN\",\r\n    \"partyId\": \"56733123455\"\r\n  },\r\n  \"payerMessage\": \"Salary Payment April 2023\",\r\n  \"payeeNote\": \"Salary Payment April 2023\"\r\n}"
										},
										"url": "https://sandbox.momodeveloper.mtn.com/disbursement/v1_0/transfer"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "Transfer Status ",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "5bc60bf0-a81c-4232-8135-9f560a5f3979"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Response has the required fields\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.amount).to.exist;",
											"  pm.expect(responseData.currency).to.exist;",
											"  pm.expect(responseData.financialTransactionId).to.exist;",
											"  pm.expect(responseData.externalId).to.exist;",
											"  pm.expect(responseData.payee).to.exist;",
											"  pm.expect(responseData.payerMessage).to.exist;",
											"  pm.expect(responseData.payeeNote).to.exist;",
											"  pm.expect(responseData.status).to.exist;",
											"});",
											"",
											"",
											"pm.test(\"Amount is in a valid format\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.amount).to.be.a('string').and.to.match(/^\\d+(\\.\\d{1,2})?$/);",
											"});",
											"",
											"",
											"pm.test(\"Currency is in a valid format\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.currency).to.match(/[A-Z]{3}/, \"Currency should be in valid format\");",
											"});",
											"",
											"",
											"pm.test(\"Payee object contains partyIdType and partyId\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.payee).to.be.an('object');",
											"    pm.expect(responseData.payee.partyIdType).to.exist;",
											"    pm.expect(responseData.payee.partyId).to.exist;",
											"});",
											"",
											"pm.test(\"Content-Type header is application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											"",
											"pm.test(\"Amount should not be empty\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.amount).to.exist.and.to.not.be.empty;",
											"});",
											"",
											"",
											"pm.test(\"Currency should not be empty\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.currency).to.exist.and.to.not.be.empty;",
											"});",
											"",
											"",
											"pm.test(\"FinancialTransactionId should not be empty\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData.financialTransactionId).to.exist.and.to.not.be.empty;",
											"});",
											"",
											"",
											"pm.test(\"ExternalId should not be empty\", function () {",
											"  const responseData = pm.response.json();",
											"  pm.expect(responseData.externalId).to.exist.and.to.not.be.empty;",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "77b493ee-5af4-4c49-9465-b483ff21e98e"
									}
								}
							],
							"id": "7d341d6c-8cc0-4584-a79a-0b9d70e11bea",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Access_Token}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Target-Environment",
										"value": "{{Target_Environment}}"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{Disbursement_Subscription-Key}}"
									}
								],
								"url": {
									"raw": "https://sandbox.momodeveloper.mtn.com/disbursement/v1_0/transfer/:Request_ID_Transfer",
									"protocol": "https",
									"host": [
										"sandbox",
										"momodeveloper",
										"mtn",
										"com"
									],
									"path": [
										"disbursement",
										"v1_0",
										"transfer",
										":Request_ID_Transfer"
									],
									"variable": [
										{
											"id": "20438299-f37c-4aef-aefd-fe0213f526ee",
											"key": "Request_ID_Transfer",
											"value": "{{Request_ID_Transfer}}"
										}
									]
								},
								"description": "\nThis endpoint makes an HTTP GET request to retrieve information about a specific transfer identified by the provided Request ID.\n\n### Request Headers\nNo specific request headers were provided for this endpoint.\n\n### Request Body\nThis endpoint does not require a request body as it is a GET request.\n\n### Response Body\nThe response to the GET request will include the following fields in JSON format:\n- `amount`: The amount of the transfer\n- `currency`: The currency used for the transfer\n- `financialTransactionId`: The financial transaction ID associated with the transfer\n- `externalId`: The external ID associated with the transfer\n- `payee`: An object containing information about the payee, including party ID type and party ID\n- `payerMessage`: The message from the payer associated with the transfer\n- `payeeNote`: The note from the payee associated with the transfer\n- `status`: The status of the transfer\n\n### Relevant Information\nThe response status for the last execution was 200, and the content type of the response was `application/json`.\n\n"
							},
							"response": [
								{
									"id": "47e69a5a-6249-4331-84b8-02921324b45f",
									"name": "Transfer Status ",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Target-Environment",
												"value": "sandbox"
											},
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "0fd9826a39aa468fb311d23fc08a55fc"
											}
										],
										"url": {
											"raw": "https://sandbox.momodeveloper.mtn.com/disbursement/v1_0/transfer/:Request_ID_Transfer",
											"protocol": "https",
											"host": [
												"sandbox",
												"momodeveloper",
												"mtn",
												"com"
											],
											"path": [
												"disbursement",
												"v1_0",
												"transfer",
												":Request_ID_Transfer"
											],
											"variable": [
												{
													"key": "Request_ID_Transfer",
													"value": "1077fbc2-9253-437f-883c-30e248bc635d"
												}
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "38f893f1-1b3b-4f68-a9c1-96f9aeba7d3d",
					"description": "Make MoMo Transfer from Your Bussiness to Other Bussiness, Customers, Employees in the context of salary, bet winnings, Service Payments.\n\nThe MoMo Transfer API acommendants one MSISDN/ALIAS per request, and not bult.\n\nBussiness to Bussiness Payments by using their Merchart ID Example Below partyIdType\": \"ALIAS\",  \n\"partyId\": \"678997678\" --Value is the Merchant ID\n\n``` json\n{\n  \"amount\": \"5900\",\n  \"currency\": \"EUR\",\n  \"externalId\": \"890695\",\n  \"payee\": {\n    \"partyIdType\": \"ALIAS\",\n    \"partyId\": \"678997678\"\n  },\n  \"payerMessage\": \"Salary Payment April 2023\",\n  \"payeeNote\": \"Salary Payment April 2023\"\n}\n\n ```\n\nBussiness to Customer/Employee Payments by using their Merchart ID Example Below partyIdType\": \"MSISDN\",  \n\"partyId\": \"2567524561\" --Value is the Customer MSISDN with country code\n\n``` json\n{\n  \"amount\": \"5900\",\n  \"currency\": \"EUR\",\n  \"externalId\": \"890695\",\n  \"payee\": {\n    \"partyIdType\": \"MSISDN\",\n    \"partyId\": \"2567524561\"\n  },\n  \"payerMessage\": \"Salary Payment April 2023\",\n  \"payeeNote\": \"Salary Payment April 2023\"\n}\n\n ```"
				}
			],
			"id": "a7346c55-763c-4572-9974-f2925b1ff42b",
			"description": "<img src=\"https://content.pstmn.io/72e99f0b-deec-48fe-a12f-bcd804ea83fc/UEFZLnN2Zw==\">\n\nMoMo PAY APIs enable businesses to disburse payments to other consumers or businesses  \nThis can be used in the context of salary payment, benefits disbursements and any other pay out. It can also be used to pay other business (suppliers)\n\nPAY APIs utilize the Disbursment Subscription Keys found\n\n<img src=\"https://content.pstmn.io/0278b4e1-b896-429b-bc5a-a3533d62b4ba/X09BQjkxMDkucG5n\">"
		},
		{
			"name": "Account Validation",
			"item": [
				{
					"name": "Validation No  Consent",
					"item": [
						{
							"name": "Account Check",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "a64cec7e-e11b-4aed-a0b2-78b1594bdbd6"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Response has the required field 'result'\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.have.property('result');",
											"});",
											"",
											"",
											"pm.test(\"Content-Type header is application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											"",
											"pm.test(\"Presence and validity of the Authorization header\", function () {",
											"    pm.expect(pm.request.headers.has(\"Authorization\")).to.be.true;",
											"    pm.expect(pm.request.headers.get(\"Authorization\").match(/^Bearer .+$/));",
											"});",
											"",
											"pm.test(\"Presence  of the Ocp-Apim-Subscription-Key header\", function () {",
											"    pm.expect(pm.request.headers.has(\"Ocp-Apim-Subscription-Key\")).to.be.true;",
											"    });"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "f245c952-96a5-47b5-9483-1b5a15856f41"
									}
								}
							],
							"id": "fc749242-8077-467a-b350-320aead4ded2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Access_Token}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Target-Environment",
										"value": "{{Target_Environment}}"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{Disbursement_Subscription-Key}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/disbursement/v1_0/accountholder/msisdn/:MSISDN/active",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"disbursement",
										"v1_0",
										"accountholder",
										"msisdn",
										":MSISDN",
										"active"
									],
									"variable": [
										{
											"id": "aeb2538c-1bb8-46c4-9dd9-bee8751ef341",
											"key": "MSISDN",
											"value": "{{MSISDN}}"
										}
									]
								},
								"description": "\n# Retrieve Active Account Holder by MSISDN\n\nThis endpoint makes an HTTP GET request to retrieve the active account holder by MSISDN.\n\n## Request\n\n### Headers\nNo specific headers are required for this request.\n\n### URL Parameters\n- `MSISDN` (required, string): The mobile number for which the active account holder information is to be retrieved.\n\n## Response\n\n### Body\nThe response will be in JSON format and will contain the following key:\n- `result` (boolean): Indicates whether the account holder is active or not.\n\nExample response body:\n```json\n{\n    \"result\": true\n}\n```\n"
							},
							"response": []
						},
						{
							"name": "Basic Userinfo No Consent",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "56a294ce-eda6-4749-b783-7e167d62314e",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "38d1e0b5-8a51-4a2a-b1d7-77dad6673cb6",
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Response Content-Type is application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											"",
											"",
											"pm.test(\"Validate the presence of required fields\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.sub).to.exist;",
											"    pm.expect(responseData.name).to.exist;",
											"    pm.expect(responseData.given_name).to.exist;",
											"    pm.expect(responseData.family_name).to.exist;",
											"    pm.expect(responseData.birthdate).to.exist;",
											"    pm.expect(responseData.locale).to.exist;",
											"    pm.expect(responseData.gender).to.exist;",
											"    pm.expect(responseData.updated_at).to.exist;",
											"});",
											"",
											"",
											"pm.test(\"Birthdate is in a valid date format\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.birthdate).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);",
											"});",
											"",
											"",
											"pm.test(\"Validate the authentication using Bearer Token for Authorization\", function () {",
											"    pm.expect(pm.request.to.have.header(\"Authorization\"));",
											"    pm.expect(pm.request.headers.get(\"Authorization\")).to.include(\"Bearer\");",
											"});",
											"",
											"pm.test(\"Presence  of the Ocp-Apim-Subscription-Key header\", function () {",
											"    pm.expect(pm.request.headers.has(\"Ocp-Apim-Subscription-Key\")).to.be.true;",
											"    });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "1aa6fae0-f37d-4aaf-b2ef-18f89cf2822d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Access_Token}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Target-Environment",
										"value": "{{Target_Environment}}"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "bc55468db77f4727b91dc4c061b8a24c"
									}
								],
								"url": {
									"raw": "{{base_url}}/remittance/v1_0/accountholder/msisdn/:MSISDN/basicuserinfo",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"remittance",
										"v1_0",
										"accountholder",
										"msisdn",
										":MSISDN",
										"basicuserinfo"
									],
									"variable": [
										{
											"key": "MSISDN",
											"value": "{{MSISDN}}"
										}
									]
								},
								"description": "\n# GET /disbursement/v1_0/accountholder/msisdn/:MSISDN/basicuserinfo\n\n## Description\nThis endpoint retrieves basic user information for the account holder associated with the provided MSISDN (Mobile Station International Subscriber Directory Number).\n\n## Headers\n- **Authorization** (Bearer Token) - The request is authenticated using a Bearer Token, which is the Access_token. This token is automatically generated in the pre-request script of the collection.\n- **X-Target-Environment** - The identifier on the API Request specifying which country the request is to be processed for production. During testing, **sandbox** is used.\n- **Ocp-Apim-Subscription-Key** - Subscription key which provides access to the APIM. Found in your [Profile](https://momodeveloper.mtn.com/developer).\n\n## Request\n- Path parameter\n  - **MSISDN** - The Mobile Station International Subscriber Directory Number for which the basic user information is to be retrieved.\n\n## Response\nUpon successful execution, the response will have a status code of 200 and a JSON object with the following fields:\n```json\n{\n  \"sub\": \"\",\n  \"name\": \"\",\n  \"given_name\": \"\",\n  \"family_name\": \"\",\n  \"birthdate\": \"\",\n  \"locale\": \"\",\n  \"gender\": \"\",\n  \"updated_at\": 0\n}\n```\nThe response contains basic user information fields such as name, given name, family name, birthdate, locale, gender, and updated timestamp.\n\nName Validation Check is done against the MSISDN with the Country code.\n"
							},
							"response": []
						},
						{
							"name": "Basic Userinfo No Consent Alias",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "56a294ce-eda6-4749-b783-7e167d62314e",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "38d1e0b5-8a51-4a2a-b1d7-77dad6673cb6",
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Response Content-Type is application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											"",
											"",
											"pm.test(\"Validate the presence of required fields\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.sub).to.exist;",
											"    pm.expect(responseData.name).to.exist;",
											"    pm.expect(responseData.given_name).to.exist;",
											"    pm.expect(responseData.family_name).to.exist;",
											"    pm.expect(responseData.birthdate).to.exist;",
											"    pm.expect(responseData.locale).to.exist;",
											"    pm.expect(responseData.gender).to.exist;",
											"    pm.expect(responseData.updated_at).to.exist;",
											"});",
											"",
											"",
											"pm.test(\"Birthdate is in a valid date format\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.birthdate).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);",
											"});",
											"",
											"",
											"pm.test(\"Validate the authentication using Bearer Token for Authorization\", function () {",
											"    pm.expect(pm.request.to.have.header(\"Authorization\"));",
											"    pm.expect(pm.request.headers.get(\"Authorization\")).to.include(\"Bearer\");",
											"});",
											"",
											"pm.test(\"Presence  of the Ocp-Apim-Subscription-Key header\", function () {",
											"    pm.expect(pm.request.headers.has(\"Ocp-Apim-Subscription-Key\")).to.be.true;",
											"    });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "1d047497-5408-4415-80db-1fd7f8b49da4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Access_Token}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Target-Environment",
										"value": "{{Target_Environment}}"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{Disbursement_Subscription-Key}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/disbursement/v1_0/accountholder/Alias/:MSISDN/basicuserinfo",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"disbursement",
										"v1_0",
										"accountholder",
										"Alias",
										":MSISDN",
										"basicuserinfo"
									],
									"variable": [
										{
											"key": "MSISDN",
											"value": "{{MSISDN}}"
										}
									]
								},
								"description": "\n# GET /disbursement/v1_0/accountholder/msisdn/:MSISDN/basicuserinfo\n\n## Description\nThis endpoint retrieves basic user information for the account holder associated with the provided MSISDN (Mobile Station International Subscriber Directory Number).\n\n## Headers\n- **Authorization** (Bearer Token) - The request is authenticated using a Bearer Token, which is the Access_token. This token is automatically generated in the pre-request script of the collection.\n- **X-Target-Environment** - The identifier on the API Request specifying which country the request is to be processed for production. During testing, **sandbox** is used.\n- **Ocp-Apim-Subscription-Key** - Subscription key which provides access to the APIM. Found in your [Profile](https://momodeveloper.mtn.com/developer).\n\n## Request\n- Path parameter\n  - **MSISDN** - The Mobile Station International Subscriber Directory Number for which the basic user information is to be retrieved.\n\n## Response\nUpon successful execution, the response will have a status code of 200 and a JSON object with the following fields:\n```json\n{\n  \"sub\": \"\",\n  \"name\": \"\",\n  \"given_name\": \"\",\n  \"family_name\": \"\",\n  \"birthdate\": \"\",\n  \"locale\": \"\",\n  \"gender\": \"\",\n  \"updated_at\": 0\n}\n```\nThe response contains basic user information fields such as name, given name, family name, birthdate, locale, gender, and updated timestamp.\n\nName Validation Check is done against the MSISDN with the Country code.\n"
							},
							"response": []
						}
					],
					"id": "7f4d27fd-efdf-40ae-aac5-b9ca416ee0ee",
					"description": "API Folder containing APIs that can be validated without requiring customer consent.\n\n[Check Accountholder](https://www.postman.com/momoapis/workspace/momo-open-apis/request/28452721-fc749242-8077-467a-b350-320aead4ded2?action=share&source=copy-link&creator=28452721&ctx=documentation)\n\nCheck Account Holder API This API provides information on whether an account has a MoMo wallet or not. It returns either true or false.\n\n[Get Basic Info (msisdn)](https://www.postman.com/momoapis/workspace/momo-open-apis/request/28452721-1aa6fae0-f37d-4aaf-b2ef-18f89cf2822d?action=share&source=copy-link&creator=28452721&ctx=documentation)\n\nGet Basic Info (msisdn) API This API retrieves the first and last names of the MoMo wallet owner. If the wallet does not exist, it returns an error message stating \"Not Found\".\n\n[Get Basic Info (Alias)](https://www.postman.com/momoapis/workspace/momo-open-apis/request/28452721-1d047497-5408-4415-80db-1fd7f8b49da4?action=share&source=copy-link&creator=28452721&ctx=documentation)\n\nGet Basic Info (Alias) API This API retrieves the first and last names of the MoMo wallet owner using an Alias (Business Merchant ID). If the wallet does not exist, it returns an error message stating \"Not Found\""
				},
				{
					"name": "Detiled  KYC-With Consent",
					"item": [
						{
							"name": "bc-authorize",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "900e17b3-0798-4cc4-ad35-e8c20ae2cf07"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const responseData = pm.response.json();",
											"var req_id = responseData.auth_req_id;",
											"pm.environment.set('Consent_Req_Id',req_id)",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Response has the required fields\", function () {",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData).to.have.property('auth_req_id');",
											"    pm.expect(responseData).to.have.property('expires_in');",
											"    pm.expect(responseData).to.have.property('interval');",
											"});",
											"",
											"",
											"pm.test(\"Auth_req_id is a non-empty string\", function () {",
											"  pm.expect(responseData.auth_req_id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"Expires_in and interval are non-negative integers\", function () {",
											"  pm.expect(responseData.expires_in).to.be.a('number').and.to.be.at.least(0, \"Expires_in should be a non-negative integer\");",
											"  pm.expect(responseData.interval).to.be.a('number').and.to.be.at.least(0, \"Interval should be a non-negative integer\");",
											"});",
											"",
											"",
											"pm.test(\"Content-Type is application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"// Test to check if the request contains the required headers",
											"pm.test(\"Request contains the required headers\", function () {",
											"    ",
											"        pm.request.headers.get('Content-Type').to.exist;",
											"        pm.request.headers.get('Authorization').to.exist;",
											"        pm.request.headers.get('X-Target-Environment').to.exist;",
											"        pm.request.headers.get('Ocp-Apim-Subscription-Key').to.exist;",
											"        pm.request.headers.get('X-Callback-Url').to.exist;",
											"   ",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "75c90758-33a0-4b91-82e6-7301c1338746"
									}
								}
							],
							"id": "70ae2906-5109-4188-bf90-d5065fcb6262",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Access_Token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Target-Environment",
										"value": "{{Target_Environment}}"
									},
									{
										"key": "X-Callback-Url",
										"value": "{{CallbackURL}}"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{Disbursement_Subscription-Key}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "scope",
											"value": "all_info",
											"type": "text"
										},
										{
											"key": "login_hint",
											"value": "ID:563667/MSISDN",
											"type": "text"
										},
										{
											"key": "access_type",
											"value": "offline",
											"type": "text"
										}
									]
								},
								"url": "{{base_url}}/disbursement/v1_0/bc-authorize",
								"description": "\nThis endpoint allows you to make an HTTP POST request to {{base_url}}/disbursement/v1_0/bc-authorize in order to authorize a disbursement.\n\n### Request Body\nThe request should include the following parameters in x-www-form-urlencoded format:\n- `param1`: (text) Description of param1.\n- `param2`: (text) Description of param2.\n- `param3`: (file) Description of param3.\n\n### Response\nThe response of this request is a JSON schema detailing the structure of the data that will be returned upon a successful request.\n\n"
							},
							"response": [
								{
									"id": "cf575f1d-722d-4558-ab4f-7295c8f8b01b",
									"name": "bc-authorize",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Target-Environment",
												"value": "sandbox"
											},
											{
												"key": "X-Callback-Url",
												"value": "https://webhook.site/mywebhooksandbox"
											},
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "0fd9826a39aa468fb311d23fc08a55fc"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "scope",
													"value": "all_info",
													"type": "text"
												},
												{
													"key": "login_hint",
													"value": "ID:563667/MSISDN",
													"type": "text"
												},
												{
													"key": "access_type",
													"value": "offline",
													"type": "text"
												}
											]
										},
										"url": "https://sandbox.momodeveloper.mtn.com/disbursement/v1_0/bc-authorize"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "Generate Oauth2 Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "26e04c1b-6cd2-498a-ab0f-6d275ff25af9"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var TokenString = pm.response.json().access_token;",
											"pm.environment.set('Oauth2_Token',TokenString)",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"",
											"pm.test(\"Content-Type is application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											"",
											"pm.test(\"Response has the required fields\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData).to.have.property('access_token');",
											"    pm.expect(responseData).to.have.property('token_type');",
											"    pm.expect(responseData).to.have.property('expires_in');",
											"    pm.expect(responseData).to.have.property('scope');",
											"    pm.expect(responseData).to.have.property('refresh_token');",
											"    pm.expect(responseData).to.have.property('refresh_token_expires_in');",
											"});",
											"",
											"",
											"pm.test(\"Access token is a non-empty string\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.access_token).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Access token should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"Expires_in and refresh_token_expires_in are non-negative integers\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.expires_in).to.be.a('number').and.to.be.at.least(0);",
											"    pm.expect(responseData.refresh_token_expires_in).to.be.a('number').and.to.be.at.least(0);",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "c42bc9e6-fdf4-4799-a738-6885f27f0d47"
									}
								}
							],
							"id": "c9d10d39-f9ab-4e1f-b835-21a113a595d4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"password": "{{api_key}}",
										"username": "{{api_user}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Target-Environment",
										"value": "{{Target_Environment}}"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{Disbursement_Subscription-Key}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "urn:openid:params:grant-type:ciba",
											"type": "text"
										},
										{
											"key": "auth_req_id",
											"value": "{{Consent_Req_Id}}",
											"type": "text"
										}
									]
								},
								"url": "{{base_url}}/disbursement/oauth2/token/",
								"description": "### Request Description\n\nThis endpoint allows the client to obtain an OAuth2 token for disbursement. The request should be made using the HTTP POST method with the x-www-form-urlencoded request body type.\n\n### Request Body\n\n- No specific parameters were provided for the request body.\n    \n\n### Response\n\nThe response for this request is not provided.\n\n### JSON Schema for Response\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"access_token\": {\n      \"type\": \"string\"\n    },\n    \"token_type\": {\n      \"type\": \"string\"\n    },\n    \"expires_in\": {\n      \"type\": \"integer\"\n    },\n    \"scope\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```"
							},
							"response": [
								{
									"id": "239a3688-cc7c-4d04-8bfb-f5a885d0152e",
									"name": "Generate Oauth2 Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Target-Environment",
												"value": "sandbox"
											},
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "0fd9826a39aa468fb311d23fc08a55fc"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "urn:openid:params:grant-type:ciba",
													"type": "text"
												},
												{
													"key": "auth_req_id",
													"value": "010001b2-5c84-4dd1-9eaf-56d5668dabd3",
													"type": "text"
												}
											]
										},
										"url": "https://sandbox.momodeveloper.mtn.com/disbursement/oauth2/token/"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "Get UserInfo",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "33f106ac-de7f-4972-884c-af32d237c960"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Content-Type header is application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											"",
											"pm.test(\"Response has the required fields\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData).to.include.all.keys('sub', 'name', 'given_name', 'family_name', 'birthdate', 'locale', 'gender', 'updated_at');",
											"});",
											"",
											"",
											"pm.test(\"Birthdate is in a valid date format\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.birthdate).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "6673863f-8647-47ea-897e-2ca8999eabf4"
									}
								}
							],
							"id": "861abbd1-ef7c-4f75-9bc8-c2341aede0cf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Oauth2_Token}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Target-Environment",
										"value": "{{Target_Environment}}"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{Disbursement_Subscription-Key}}"
									}
								],
								"url": "{{base_url}}/disbursement/oauth2/v1_0/userinfo",
								"description": "# Userinfo Endpoint\n\nThis endpoint is used to retrieve user information via an HTTP GET request.\n\n## Request\n\nThe request does not require any specific parameters in the request body. The user should ensure that the request includes the necessary authentication headers or tokens to access the userinfo.\n\n## Response\n\nUpon a successful request, the server will respond with a status code of 401 and a Content-Type of text/xml. The response body will contain the user information in XML format."
							},
							"response": [
								{
									"id": "d2e2e6fd-13ee-4577-91c7-e4b0a6eb425d",
									"name": "Get UserInfo",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Target-Environment",
												"value": "{{Target_Environment}}"
											},
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{Disbursement_Subscription-Key}}"
											}
										],
										"url": "{{base_url}}/disbursement/oauth2/v1_0/userinfo"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "699a743f-5920-409c-84a2-e3771085eae9",
					"description": "<img src=\"https://content.pstmn.io/8eaa7faa-3372-4581-93dd-f06eff9b35e9/R2V0Y29uc2VudC5zdmc=\">\n\nKYC With Consent APIs, Used to obtain Consent from the Customer to access their KYC information, like National ID, Date of Birth,"
				}
			],
			"id": "21bfe7fd-9a9d-4f6e-80a6-30a7ce44c560",
			"description": "<img src=\"https://content.pstmn.io/7d599d81-9db5-4a40-ba92-9c08e7238d65/bWFuYWdlLnN2Zw==\">\n\nTo avoid Debiting Or Transferring invalid / Wrong MoMo Accounts, good practice to validate them and confirm ownership. Get Names and KYC and Account Status (Active- True, Unactive-False)"
		},
		{
			"name": "Distribute",
			"item": [
				{
					"name": "Cash IN",
					"item": [
						{
							"name": "Deposit Request",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a049bd12-d764-47db-a2ad-039c8225dc8d",
										"exec": [
											"var ReferenceId = pm.environment.replaceIn(\"{{$guid}}\");\r",
											"pm.environment.set('Request_ID_CashIn', ReferenceId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a0570e57-9543-4aa5-84e6-39cf23244e81",
										"exec": [
											"var request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"X-Target-Environment header is set to 'sandbox' or for production set 'mtn'+'country'\", function () {\r",
											"    const targetEnvironment = pm.request.headers.get('X-Target-Environment');\r",
											"    pm.expect(targetEnvironment).to.satisfy(value => value === 'mtn'+'country)' || value === 'sandbox');\r",
											"});\r",
											"\r",
											"pm.test(\"X-Reference-Id header is UUID string formated\", function (){\r",
											"const xreferenceid =   pm.request.headers.get('X-Reference-Id');\r",
											"xreferenceid.match('^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$');\r",
											"});\r",
											"\r",
											"pm.test(\"Request body has the required fields and not empty\", function () {\r",
											"    pm.expect(request.externalId).to.exist.and.to.not.be.empty;\r",
											"    pm.expect(request.amount).to.exist.and.to.not.be.empty;\r",
											"    pm.expect(request.currency).to.exist.and.to.not.be.empty;\r",
											"    pm.expect(request.payee.partyId).to.exist.and.to.not.be.empty;\r",
											"    pm.expect(request.payee.partyIdType).to.exist.and.to.not.be.empty;\r",
											"    pm.expect(request.payerMessage).to.exist.and.to.not.be.empty;\r",
											"    pm.expect(request.payeeNote).to.exist.and.to.not.be.empty;    \r",
											"});\r",
											"\r",
											"pm.test(\"payee partyIdType and partyId are not empty\", function () {\r",
											"  pm.expect(request.payee.partyIdType).to.exist.and.to.not.be.empty;  \r",
											"  pm.expect(request.payee.partyId).to.exist.and.to.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"payee partyIdType is MSISDN or ALIAS\", function () {\r",
											"  pm.expect(request.payee.partyIdType).to.satisfy(value => value === 'MSISDN' || value === 'ALIAS');\r",
											"});\r",
											"\r",
											"pm.test(\"PayeeNote and payeeMessage have no special characters\",\r",
											" function () {\r",
											"pm.expect(/^[ 0-9a-zA-Z\\-_]+$/.test(request.payeeNote)).to.be.true &\r",
											"pm.expect(/^[ 0-9a-zA-Z\\-_]+$/.test(request.payeeMessage)).to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Currency is EUR, for prodcution use country currency\", function () {\r",
											"  pm.expect(request.currency).to.satisfy(value => value === 'EUR');\r",
											"});\r",
											"\r",
											"pm.test(\"Request contains a Bearer token in the Authorization header\", function() {\r",
											"    pm.expect(pm.request.headers.get('Authorization')).to.include('Bearer');\r",
											"});\r",
											"\r",
											"pm.test(\"payeeNote is not more than 160 characters\", function () \r",
											"{ pm.expect(request.payeeNote).length.to.be.not.above(160); });\r",
											"\r",
											"pm.test(\"payerMessage is not more than 160 characters\", function () \r",
											"{ pm.expect(request.payerMessage).length.to.be.not.above(160); });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "d0bfe3d1-0b4a-4e91-9a4c-3dbd0f5c39fc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Access_Token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Callback-Url",
										"value": "{{CallbackURL}}"
									},
									{
										"key": "X-Reference-Id",
										"value": "{{Request_ID_CashIn}}"
									},
									{
										"key": "X-Target-Environment",
										"value": "{{Target_Environment}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{Disbursement_Subscription-Key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"amount\": \"2679\",\r\n  \"currency\": \"EUR\",\r\n  \"externalId\": \"004504\",\r\n  \"payee\": {\r\n    \"partyIdType\": \"MSISDN\",\r\n    \"partyId\": \"{{MSISDN}}\"\r\n  },\r\n  \"payerMessage\": \"MoMo CASH IN Thank You\",\r\n  \"payeeNote\": \"MoMo CASH IN Thank You\"\r\n}"
								},
								"url": "https://sandbox.momodeveloper.mtn.com/disbursement/v1_0/deposit",
								"description": "\n### Deposit Disbursement\n\nThis endpoint allows you to initiate a deposit disbursement.\n\n#### Request Body\n- `amount` (string) - The amount to be deposited.\n- `currency` (string) - The currency of the amount.\n- `externalId` (string) - Your unique identifier for this transaction.\n- `payee.partyIdType` (string) - The type of the party ID.\n- `payee.partyId` (string) - The ID of the party to receive the deposit.\n- `payerMessage` (string) - Message from the payer.\n- `payeeNote` (string) - Note to the payee.\n\n#### Response\n- Status: 202\n- Content-Type: text/xml\n- Response Body: null\n\n"
							},
							"response": [
								{
									"id": "69d541b5-9337-4231-bfb7-044d64b5a0e4",
									"name": "Deposit Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Callback-Url",
												"value": "https://webhook.site/mywebhooksandbox"
											},
											{
												"key": "X-Reference-Id",
												"value": ""
											},
											{
												"key": "X-Target-Environment",
												"value": "sandbox"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "0fd9826a39aa468fb311d23fc08a55fc"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"amount\": \"2679\",\r\n  \"currency\": \"EUR\",\r\n  \"externalId\": \"004504\",\r\n  \"payee\": {\r\n    \"partyIdType\": \"MSISDN\",\r\n    \"partyId\": \"56733123455\"\r\n  },\r\n  \"payerMessage\": \"MoMo CASH IN Thank You\",\r\n  \"payeeNote\": \"MoMo CASH IN Thank You\"\r\n}"
										},
										"url": "https://sandbox.momodeveloper.mtn.com/disbursement/v1_0/deposit"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "Deposit Request Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Response has the required fields\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.externalId).to.exist;",
											"    pm.expect(responseData.amount).to.exist;",
											"    pm.expect(responseData.currency).to.exist;",
											"    pm.expect(responseData.payee).to.exist;",
											"    pm.expect(responseData.payerMessage).to.exist;",
											"    pm.expect(responseData.payeeNote).to.exist;",
											"    pm.expect(responseData.status).to.exist;",
											"});",
											"",
											"",
											"pm.test(\"Payee object should not be empty\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.payee).to.not.be.empty;",
											"});",
											"",
											"",
											"pm.test(\"Amount is a non-negative number\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData.amount).to.be.a('string');",
											" });",
											"",
											"",
											"pm.test(\"Currency is in a valid format\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.currency).to.be.a('string').and.to.have.lengthOf(3, \"Currency should be a 3-letter code\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "b5352f3d-5a38-41ff-a719-04781b615b02"
									}
								}
							],
							"id": "f70ea465-fa63-49ea-93db-f8c0bd2f545a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Access_Token}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Target-Environment",
										"value": "{{Target_Environment}}"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{Disbursement_Subscription-Key}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/disbursement/v1_0/deposit/:Request_ID_CashIn",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"disbursement",
										"v1_0",
										"deposit",
										":Request_ID_CashIn"
									],
									"variable": [
										{
											"id": "c65f1ea0-ee56-4378-9115-d4e89f65a9ab",
											"key": "Request_ID_CashIn",
											"value": "{{Request_ID_CashIn}}"
										}
									]
								},
								"description": "\nThis API endpoint makes an HTTP GET request to retrieve the details of a specific deposit identified by the Request_ID_CashIn in the URL.\n\n### Request\n- Method: GET\n- URL: {{base_url}}/disbursement/v1_0/deposit/:Request_ID_CashIn\n\n### Response\n- Status: 200\n- Content-Type: application/json\n- Body:\n    ```json\n    {\n        \"externalId\":\"\",\n        \"amount\":\"\",\n        \"currency\":\"\",\n        \"payee\":{\n            \"partyIdType\":\"\",\n            \"partyId\":\"\"\n        },\n        \"payerMessage\":\"\",\n        \"payeeNote\":\"\",\n        \"status\":\"\"\n    }\n    ```\n\nThe response body provides details about the deposit, including the external ID, amount, currency, payee information, payer message, payee note, and status.\n"
							},
							"response": [
								{
									"id": "5d3b73df-de17-4ffc-91f1-ffeb99a83618",
									"name": "Deposit Request Status",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Target-Environment",
												"value": "sandbox"
											},
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "0fd9826a39aa468fb311d23fc08a55fc"
											}
										],
										"url": {
											"raw": "https://sandbox.momodeveloper.mtn.com/disbursement/v1_0/deposit/:Request_ID_CashIn",
											"protocol": "https",
											"host": [
												"sandbox",
												"momodeveloper",
												"mtn",
												"com"
											],
											"path": [
												"disbursement",
												"v1_0",
												"deposit",
												":Request_ID_CashIn"
											],
											"variable": [
												{
													"key": "Request_ID_CashIn",
													"value": ""
												}
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "1cd2bd45-7ec1-422c-89f2-859119d74d75"
				},
				{
					"name": "Cash OUT",
					"item": [
						{
							"name": "Request To Withdraw",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "fd940b9d-4430-477f-99eb-319895c5f701",
										"exec": [
											"var ReferenceId = pm.environment.replaceIn(\"{{$guid}}\");\r",
											"pm.environment.set('Request_ID_CashOut', ReferenceId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "5b00fbbf-a153-4cc4-b175-0cde96e9f2a2",
										"exec": [
											"var request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"X-Target-Environment header is set to 'sandbox' or for production set 'mtn'+'country'\", function () {\r",
											"    const targetEnvironment = pm.request.headers.get('X-Target-Environment');\r",
											"    pm.expect(targetEnvironment).to.satisfy(value => value === 'mtn'+'country)' || value === 'sandbox');\r",
											"});\r",
											"\r",
											"pm.test(\"X-Reference-Id header is UUID string formated\", function (){\r",
											"const xreferenceid =   pm.request.headers.get('X-Reference-Id');\r",
											"xreferenceid.match('^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$');\r",
											"});\r",
											"\r",
											"pm.test(\"Request body has the required fields and not empty\", function () {\r",
											"    pm.expect(request.externalId).to.exist.and.to.not.be.empty;\r",
											"    pm.expect(request.amount).to.exist.and.to.not.be.empty;\r",
											"    pm.expect(request.currency).to.exist.and.to.not.be.empty;\r",
											"    pm.expect(request.payer.partyId).to.exist.and.to.not.be.empty;\r",
											"    pm.expect(request.payer.partyIdType).to.exist.and.to.not.be.empty;\r",
											"    pm.expect(request.payerMessage).to.exist.and.to.not.be.empty;\r",
											"    pm.expect(request.payeeNote).to.exist.and.to.not.be.empty;    \r",
											"});\r",
											"\r",
											"pm.test(\"Payer partyIdType and partyId are not empty\", function () {\r",
											"  pm.expect(request.payer.partyIdType).to.exist.and.to.not.be.empty;  \r",
											"  pm.expect(request.payer.partyId).to.exist.and.to.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Payer partyIdType is MSISDN or ALIAS\", function () {\r",
											"  pm.expect(request.payer.partyIdType).to.satisfy(value => value === 'MSISDN' || value === 'ALIAS');\r",
											"});\r",
											"\r",
											"pm.test(\"PayeeNote and payerMessage have no special characters\",\r",
											" function () {\r",
											"pm.expect(/^[ 0-9a-zA-Z\\-_]+$/.test(request.payeeNote)).to.be.true &\r",
											"pm.expect(/^[ 0-9a-zA-Z\\-_]+$/.test(request.payerMessage)).to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Currency is EUR, for prodcution use country currency\", function () {\r",
											"  pm.expect(request.currency).to.satisfy(value => value === 'EUR');\r",
											"});\r",
											"\r",
											"pm.test(\"Request contains a Bearer token in the Authorization header\", function() {\r",
											"    pm.expect(pm.request.headers.get('Authorization')).to.include('Bearer');\r",
											"});\r",
											"\r",
											"pm.test(\"payeeNote is not more than 160 characters\", function () \r",
											"{ pm.expect(request.payeeNote).length.to.be.not.above(160); });\r",
											"\r",
											"pm.test(\"payerMessage is not more than 160 characters\", function () \r",
											"{ pm.expect(request.payerMessage).length.to.be.not.above(160); });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "490d769c-0901-4059-899b-4406726561d7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Access_Token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Callback-Url",
										"value": "{{CallbackURL}}"
									},
									{
										"key": "X-Reference-Id",
										"value": "{{Request_ID_CashOut}}"
									},
									{
										"key": "X-Target-Environment",
										"value": "{{Target_Environment}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{Collection_Subscription-Key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"amount\": \"3536636\",\r\n\"currency\": \"EUR\",\r\n\"externalId\": \"45757757\",\r\n\"payer\": {\r\n\"partyIdType\": \"MSISDN\",\r\n\"partyId\": \"{{MSISDN}}\"\r\n},\r\n\"payerMessage\": \"MoMo Cash Out Thank You\",\r\n\"payeeNote\": \"MoMo Cash Out Thank You \"\r\n}"
								},
								"url": "{{base_url}}/collection/v1_0/requesttowithdraw",
								"description": "\n### Request\n\n#### Description\nThis endpoint allows the user to initiate a request to withdraw funds.\n\n#### Method\nPOST\n\n#### URL\n`{{base_url}}/collection/v1_0/requesttowithdraw`\n\n#### Headers\n- Content-Type: application/json\n\n#### Body\n- amount (string, required): The amount to be withdrawn.\n- currency (string, required): The currency in which the withdrawal is to be made.\n- externalId (string, required): The unique identifier for the withdrawal request.\n- payer (object, required): \n  - partyIdType (string, required): The type of party ID for the payer.\n  - partyId (string, required): The ID of the payer.\n- payerMessage (string, optional): A message from the payer.\n- payeeNote (string, optional): A note for the payee.\n\n### Response\n\n#### Status\n202\n\n#### Headers\n- Content-Type: text/xml\n\n#### Body\nThe response body is empty.\n"
							},
							"response": [
								{
									"id": "9783044d-b5af-4dcb-b6a0-01a0209a2796",
									"name": "Request To Withdraw",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Callback-Url",
												"value": "https://webhook.site/mywebhooksandbox"
											},
											{
												"key": "X-Reference-Id",
												"value": ""
											},
											{
												"key": "X-Target-Environment",
												"value": "sandbox"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "bca0c92d326a46cd885f443d51b859f1"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"amount\": \"3536636\",\r\n\"currency\": \"EUR\",\r\n\"externalId\": \"45757757\",\r\n\"payer\": {\r\n\"partyIdType\": \"MSISDN\",\r\n\"partyId\": \"56733123455\"\r\n},\r\n\"payerMessage\": \"MoMo Cash Out Thank You\",\r\n\"payeeNote\": \"MoMo Cash Out Thank You \"\r\n}"
										},
										"url": "https://sandbox.momodeveloper.mtn.com/collection/v1_0/requesttowithdraw"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "Request To Withdraw Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"",
											"pm.test(\"Response has the required fields\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData).to.include.all.keys(",
											"        'financialTransactionId', ",
											"        'externalId', ",
											"        'amount', ",
											"        'currency', ",
											"        'payer', ",
											"        'payerMessage', ",
											"        'payeeNote', ",
											"        'status'",
											"    );",
											"});",
											"",
											"",
											"pm.test(\"Payer's partyIdType and partyId are not empty\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.payer.partyIdType).to.exist.and.to.not.be.empty;",
											"  pm.expect(responseData.payer.partyId).to.exist.and.to.not.be.empty;",
											"});",
											"",
											"",
											"pm.test(\"PayerMessage is a non-empty string\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.payerMessage).to.be.a('string').and.to.have.lengthOf.at.least(1, \"PayerMessage should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"PayeeNote is a non-empty string\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.payeeNote).to.be.a('string').and.to.have.lengthOf.at.least(1, \"PayeeNote should not be empty\");",
											"});"
										],
										"type": "text/javascript",
										"id": "71292af9-d34b-4a5f-ab3e-ba1c9dd1174e"
									}
								}
							],
							"id": "7547e756-3af5-4d3d-a06b-8b3e6fd8d01e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Access_Token}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Target-Environment",
										"value": "{{Target_Environment}}"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{Collection_Subscription-Key}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/collection/v1_0/requesttowithdraw/:Request_ID_CashOut",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"collection",
										"v1_0",
										"requesttowithdraw",
										":Request_ID_CashOut"
									],
									"variable": [
										{
											"id": "a23f48fb-5980-4348-b0d2-63b5aca3bb7f",
											"key": "Request_ID_CashOut",
											"value": "{{Request_ID_CashOut}}"
										}
									]
								},
								"description": "\nThis endpoint makes an HTTP GET request to retrieve information about a specific cash withdrawal request identified by the provided Request_ID_CashOut.\n\n### Request\n\nThe request does not contain a request body. The following headers may be included in the request:\n- No specific headers were mentioned in the request.\n\n### Response\n\nUpon a successful execution, the endpoint returns a JSON object with the following fields:\n- financialTransactionId (string): The ID of the financial transaction.\n- externalId (string): The external ID associated with the transaction.\n- amount (string): The amount of the withdrawal.\n- currency (string): The currency in which the withdrawal is made.\n- payer (object): An object containing information about the payer, including partyIdType and partyId.\n- payerMessage (string): A message from the payer.\n- payeeNote (string): A note from the payee.\n- status (string): The status of the withdrawal request.\n\nThe response is returned with a status code of 200 and a Content-Type of application/json.\n\n"
							},
							"response": [
								{
									"id": "8332377d-38b6-4048-a3f6-2151697a15c9",
									"name": "Request To Withdraw Status",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Target-Environment",
												"value": "sandbox"
											},
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "bca0c92d326a46cd885f443d51b859f1"
											}
										],
										"url": {
											"raw": "https://sandbox.momodeveloper.mtn.com/collection/v1_0/requesttowithdraw/:Request_ID_CashOut",
											"protocol": "https",
											"host": [
												"sandbox",
												"momodeveloper",
												"mtn",
												"com"
											],
											"path": [
												"collection",
												"v1_0",
												"requesttowithdraw",
												":Request_ID_CashOut"
											],
											"variable": [
												{
													"key": "Request_ID_CashOut",
													"value": ""
												}
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "4fa8387f-8885-4052-a047-4701b1ef804a"
				}
			],
			"id": "640eb33b-a436-4610-b8d3-cf761231eeba",
			"description": "<img src=\"https://content.pstmn.io/32ae4eaf-88f3-4ed8-ad7b-fa4ba851c490/RGlzdHJpYnV0ZS5zdmc=\" alt=\"\">\n\nMoMo Open APIs enable business to distribute MTN and MoMo service and facilitate Cash In, Cash out and Airtime sale and get commission from MTN and MoMo\n\nFolder contains Cash In APIs and Cash Out"
		},
		{
			"name": "Invoice",
			"item": [
				{
					"name": "Create Invoice",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var ReferenceId = pm.environment.replaceIn(\"{{$guid}}\");\r",
									"pm.environment.set('Request_ID_Invoice', ReferenceId);"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "9dc87d51-3be0-4f91-9aa2-cd19f2a4c060"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Describes the headers in the response",
									"pm.test(\"Response status code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"",
									"",
									"// Save the status code in a global variable",
									"var statusCode = pm.response.code;",
									"pm.globals.set(\"statusCode\", statusCode);"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "0106265d-e324-4ff1-b18f-954ca30808d3"
							}
						}
					],
					"id": "114cb4b3-61ba-44bb-9c67-b77bde08d5c7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Access_Token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Callback-Url",
								"value": "{{CallbackURL}}"
							},
							{
								"key": "X-Reference-Id",
								"value": "{{Request_ID_Invoice}}"
							},
							{
								"key": "X-Target-Environment",
								"value": "{{Target_Environment}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{Collection_Subscription-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"externalId\": \"005060\",\r\n    \"amount\": \"5000\",\r\n    \"currency\": \"EUR\",\r\n    \"validityDuration\": \"360\",\r\n    \"intendedPayer\": {\r\n        \"partyIdType\": \"MSISDN\",\r\n        \"partyId\": \"56784939\"\r\n    },\r\n    \"payee\": {\r\n        \"partyIdType\": \"MSISDN\",\r\n        \"partyId\": \"46733123450\"\r\n    },\r\n    \"description\": \"InVoice SandBox\"\r\n}"
						},
						"url": "{{base_url}}collection/v2_0/invoice",
						"description": "This endpoint allows you to create a new invoice by sending an HTTP POST request to [https://sandbox.momodeveloper.mtn.com/collection/v2_0/invoice](https://sandbox.momodeveloper.mtn.com/collection/v2_0/invoice). The request should include a JSON payload in the raw request body type, containing the following parameters:\n\n- externalId (string): The external identifier for the invoice.\n- amount (string): The amount of the invoice.\n- currency (string): The currency in which the invoice amount is specified.\n- validityDuration (string): The duration for which the invoice is valid.\n- intendedPayer (object): An object containing the party ID type and party ID of the intended payer.\n    - partyIdType (\"MSSIDN/ALIAS\"): The type of party ID for the intended payer.\n    - partyId (MSISDN ID): The party ID of the intended payer.\n- payee (object): An object containing the party ID type and party ID of the payee.\n    - partyIdType (MSSIDN): The type of party ID for the payee.\n    - partyId (string): The party ID of the payee.\n\nThe customer will receive an SMS with the Invoice ID.\n\n<img src=\"https://content.pstmn.io/df8b2e21-38bf-4d15-bf4f-f9b37e70ddbe/U2NyZWVuc2hvdF8yMDI0MDMwNF8xNDExNDlfTWVzc2FnZXMuanBn\">\n\nThe Payments can be made via MoMo USSD or MoMo APP\n\n<video src=\"https://www.youtube.com/embed/ZCgy7cLR5RE\" alt=\"Paying  an Invoice with MoMo Uganda USSD\" width=\"560\" height=\"364\"></video>\n\n### Example\n\n``` json\n{\n  \"externalId\": \"12345\",\n  \"amount\": \"100.00\",\n  \"currency\": \"USD\",\n  \"validityDuration\": \"30 days\",\n  \"intendedPayer\": {\n    \"partyIdType\": \"MSSIDN\",\n    \"partyId\": \"56784939\"\n  },\n  \"payee\": {\n\n ```\n\n### Response\n\nThe response for this request may include information about the created invoice, such as the invoice ID, status, or any error messages. However, based on the provided examples, the response is null."
					},
					"response": []
				},
				{
					"name": "Invoice Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData).to.have.property('referenceId');",
									"  pm.expect(responseData).to.have.property('externalId');",
									"  pm.expect(responseData).to.have.property('amount');",
									"  pm.expect(responseData).to.have.property('currency');",
									"  pm.expect(responseData).to.have.property('status');",
									"  pm.expect(responseData).to.have.property('paymentReference');",
									"  pm.expect(responseData).to.have.property('invoiceId');",
									"  pm.expect(responseData).to.have.property('expiryDateTime');",
									"  pm.expect(responseData).to.have.property('intendedPayer');",
									"  pm.expect(responseData).to.have.property('description');",
									"});",
									"",
									"",
									"pm.test(\"Amount is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.amount).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Amount should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"ExpiryDateTime is in a valid date-time format\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  responseData.expiryDateTime.match('^[0-9]{4}-[0-9]{2}-[0-9a-zA-Z]{5}:[0-9]{2}:[0-9]{2}.[0-9]{3}$');",
									"});",
									"",
									"",
									"pm.test(\"Intended payer object should be present with expected fields\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.intendedPayer).to.exist.and.to.be.an('object');",
									"    pm.expect(responseData.intendedPayer.partyIdType).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.intendedPayer.partyId).to.exist.and.to.be.a('string');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "eff9eca9-e871-46d6-aa50-dfe71ed66c96"
							}
						}
					],
					"id": "940ed48f-e66f-4ef0-9b26-44913d5808ed",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Access_Token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Target-Environment",
								"value": "{{Target_Environment}}"
							},
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{Collection_Subscription-Key}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/collection/v2_0/invoice/:Request_ID_Invoice",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"collection",
								"v2_0",
								"invoice",
								":Request_ID_Invoice"
							],
							"variable": [
								{
									"id": "e0bcaa17-41cc-4500-9dab-308149a40a98",
									"key": "Request_ID_Invoice",
									"value": "{{Request_ID_Invoice}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Invoice",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var ReferenceId = pm.environment.replaceIn(\"{{$guid}}\");\r",
									"pm.environment.set('Delete_ID_Invoice', ReferenceId);"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "98847295-396d-4f2d-86c4-d0bdb6fa93a3"
							}
						}
					],
					"id": "a9455ddc-6462-4089-9936-8ed56cc65975",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Access_Token}}"
							}
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Target-Environment",
								"value": "{{Target_Environment}}"
							},
							{
								"key": "X-Reference-Id",
								"value": "{{Delete_ID_Invoice}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{Collection_Subscription-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"externalId\": \"57r75677\"\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/collection/v2_0/invoice/:Request_ID_Invoice",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"collection",
								"v2_0",
								"invoice",
								":Request_ID_Invoice"
							],
							"variable": [
								{
									"id": "f64d4a33-32b3-47d1-989d-bbb6a06366e1",
									"key": "Request_ID_Invoice",
									"value": "{{Request_ID_Invoice}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "e87c78ed-237d-41f6-9a2e-fdcee040e2d5",
			"description": "A Business may use this in order to create an invoice that can be paid by an intended payer via any channel at a later stage."
		},
		{
			"name": "Pre Approval",
			"item": [
				{
					"name": "Request Preapproval",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var ReferenceId = pm.environment.replaceIn(\"{{$guid}}\");\r",
									"pm.environment.set('Request_ID_Preapproval', ReferenceId);"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "e0157e44-8232-4813-b4b2-75c4897e8ab7"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var request = JSON.parse(pm.request.body.raw);\r",
									"pm.test(\"X-Target-Environment header is set to 'sandbox' or for production set 'mtn'+'country'\", function () {\r",
									"    const targetEnvironment = pm.request.headers.get('X-Target-Environment');\r",
									"    pm.expect(targetEnvironment).to.satisfy(value => value === 'mtn'+'country)' || value === 'sandbox');\r",
									"});\r",
									"\r",
									"pm.test(\"X-Reference-Id header is UUID string formated\", function (){\r",
									"const xreferenceid =   pm.request.headers.get('X-Reference-Id');\r",
									"xreferenceid.match('^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$');\r",
									"});\r",
									"\r",
									"pm.test(\"Request body has the required fields and not empty\", function () {\r",
									"   \r",
									"    pm.expect(request.validityTime).to.exist.and.to.not.be.empty;\r",
									"    pm.expect(request.payerCurrency).to.exist.and.to.not.be.empty;\r",
									"    pm.expect(request.payer.partyId).to.exist.and.to.not.be.empty;\r",
									"    pm.expect(request.payer.partyIdType).to.exist.and.to.not.be.empty;\r",
									"    pm.expect(request.payerMessage).to.exist.and.to.not.be.empty;\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Payer partyIdType and partyId are not empty\", function () {\r",
									"  pm.expect(request.payer.partyIdType).to.exist.and.to.not.be.empty;  \r",
									"  pm.expect(request.payer.partyId).to.exist.and.to.not.be.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"Payer partyIdType is MSISDN or ALIAS\", function () {\r",
									"  pm.expect(request.payer.partyIdType).to.satisfy(value => value === 'MSISDN' || value === 'ALIAS');\r",
									"});\r",
									"\r",
									"pm.test(\"PayeeNote and payerMessage have no special characters\",\r",
									" function () {\r",
									"pm.expect(/^[ 0-9a-zA-Z\\-_]+$/.test(request.payeeNote)).to.be.true &\r",
									"pm.expect(/^[ 0-9a-zA-Z\\-_]+$/.test(request.payerMessage)).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Currency is EUR, for prodcution use country currency\", function () {\r",
									"  pm.expect(request.payerCurrency).to.satisfy(value => value === 'EUR');\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "b7b86bce-6d1b-4442-ab6a-4314c66e18df"
							}
						}
					],
					"id": "733aa6d9-8377-41b7-8c67-a3c290d85129",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Access_Token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Callback-Url",
								"value": "{{CallbackURL}}"
							},
							{
								"key": "X-Reference-Id",
								"value": "{{Request_ID_Preapproval}}"
							},
							{
								"key": "X-Target-Environment",
								"value": "{{Target_Environment}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{Collection_Subscription-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"payer\": {\r\n    \"partyIdType\": \"MSISDN\",\r\n    \"partyId\": \"{{MSISDN}}\"\r\n  },\r\n  \"payerCurrency\": \"EUR\",\r\n  \"payerMessage\": \"HI MoMo API\",\r\n  \"validityTime\": \"300\"\r\n}"
						},
						"url": "{{base_url}}/collection/v2_0/preapproval",
						"description": "\n### Create Preapproval\nThis endpoint allows you to create a preapproval for a collection.\n\n#### Request Body\n- `payer` (object, required): Information about the payer including `partyIdType` and `partyId`.\n- `payerCurrency` (string, required): The currency of the payer.\n- `payerMessage` (string, required): A message from the payer.\n- `validityTime` (string, required): The validity time of the preapproval.\n\n#### Response\n- Status: 202\n- Content-Type: text/xml\n- The response body is not provided (null).\n\n"
					},
					"response": [
						{
							"id": "25887cb1-638f-44d3-81f5-090cbe12cb16",
							"name": "Request Preapproval",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Callback-Url",
										"value": "{{CallbackURL}}"
									},
									{
										"key": "X-Reference-Id",
										"value": "{{Request_ID_Preapproval}}"
									},
									{
										"key": "X-Target-Environment",
										"value": "{{Target_Environment}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{Collection_Subscription-Key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"payer\": {\r\n    \"partyIdType\": \"MSISDN\",\r\n    \"partyId\": \"{{MSISDN}}\"\r\n  },\r\n  \"payerCurrency\": \"EUR\",\r\n  \"payerMessage\": \"HI MoMo API\",\r\n  \"validityTime\": \"300\"\r\n}"
								},
								"url": "{{base_url}}/collection/v2_0/preapproval"
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"responseTime": null,
							"body": ""
						}
					]
				},
				{
					"name": "Get PreApproval Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Content-Type is application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"",
									"pm.test(\"Payer object is present in the response\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.payer).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"PayerCurrency should not be empty\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData.payerCurrency).to.exist.and.to.not.be.empty;",
									"});",
									"",
									"",
									"pm.test(\"ExpirationDateTime is in a valid date-time format\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    responseData.expirationDateTime.match(('^[0-9]{4}-[0-9]{2}-[0-9a-zA-Z]{5}:[0-9]{2}:[0-9]{2}.[0-9]{3}$'), \"ExpirationDateTime should be in valid date-time format\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "41a56757-97d2-4cfa-952e-84c0ce4f8516"
							}
						}
					],
					"id": "51ff8abe-f449-434b-9cb5-b7b635a67dc2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Access_Token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Target-Environment",
								"value": "{{Target_Environment}}"
							},
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{Collection_Subscription-Key}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/collection/v2_0/preapproval/:Request_ID_Preapproval",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"collection",
								"v2_0",
								"preapproval",
								":Request_ID_Preapproval"
							],
							"variable": [
								{
									"id": "93dc4a5b-1325-44a9-98f4-64d9d807237b",
									"key": "Request_ID_Preapproval",
									"value": "{{Request_ID_Preapproval}}"
								}
							]
						},
						"description": "\nThis API endpoint retrieves the details of a specific preapproval by providing the preapproval request ID in the URL.\n\n### Request\n- Method: GET\n- URL: {{base_url}}/collection/v2_0/preapproval/:Request_ID_Preapproval\n\n### Response\nUpon a successful execution (Status: 200), the response will be in JSON format with the following fields:\n- payer\n  - partyIdType\n  - partyId\n- payerCurrency\n- payerMessage\n- expirationDateTime\n- status\n\n"
					},
					"response": [
						{
							"id": "5ee39289-9447-4fb0-a5c4-1a5a0fdc0f25",
							"name": "Get PreApproval Status",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Target-Environment",
										"value": "{{Target_Environment}}"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{Collection_Subscription-Key}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/collection/v2_0/preapproval/:Request_ID_Preapproval",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"collection",
										"v2_0",
										"preapproval",
										":Request_ID_Preapproval"
									],
									"variable": [
										{
											"key": "Request_ID_Preapproval",
											"value": "{{Request_ID_Preapproval}}"
										}
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"responseTime": null,
							"body": ""
						}
					]
				}
			],
			"id": "24721cae-2563-4db6-82cd-1d12439d7b3d",
			"description": "<img src=\"https://content.pstmn.io/fb0b7b1d-64a3-49b7-9983-b817509bff78/R2V0Y29uc2VudC5zdmc=\" alt=\"\">\n\nPre Approval API is used to get consent from the customer to be Debited for a specaified period of time. The Consent is approved by the customer providing the correct PIN. The Consent can be cancled anytime by the customer"
		},
		{
			"name": "Remittance",
			"item": [
				{
					"name": "Transfer",
					"item": [
						{
							"name": "Transfer",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"var ReferenceId = pm.environment.replaceIn(\"{{$guid}}\");\r",
											"pm.environment.set('Request_ID_Remit_Transfer', ReferenceId);\r",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "71789af0-3191-490a-9004-8875fcd10d20"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"X-Target-Environment header is set to 'sandbox' or for production set 'mtn'+'country'\", function () {\r",
											"    const targetEnvironment = pm.request.headers.get('X-Target-Environment');\r",
											"    pm.expect(targetEnvironment).to.satisfy(value => value === 'mtn'+'country)' || value === 'sandbox');\r",
											"});\r",
											"\r",
											"pm.test(\"X-Reference-Id header is UUID string formated\", function (){\r",
											"const xreferenceid =   pm.request.headers.get('X-Reference-Id');\r",
											"xreferenceid.match('^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$');\r",
											"});\r",
											"\r",
											"pm.test(\"Request body has the required fields and not empty\", function () {\r",
											"    pm.expect(request.externalId).to.exist.and.to.not.be.empty;\r",
											"    pm.expect(request.amount).to.exist.and.to.not.be.empty;\r",
											"    pm.expect(request.currency).to.exist.and.to.not.be.empty;\r",
											"    pm.expect(request.payee.partyId).to.exist.and.to.not.be.empty;\r",
											"    pm.expect(request.payee.partyIdType).to.exist.and.to.not.be.empty;\r",
											"    pm.expect(request.payerMessage).to.exist.and.to.not.be.empty;\r",
											"    pm.expect(request.payeeNote).to.exist.and.to.not.be.empty;    \r",
											"});\r",
											"\r",
											"pm.test(\"payee partyIdType and partyId are not empty\", function () {\r",
											"  pm.expect(request.payee.partyIdType).to.exist.and.to.not.be.empty;  \r",
											"  pm.expect(request.payee.partyId).to.exist.and.to.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"payee partyIdType is MSISDN or ALIAS\", function () {\r",
											"  pm.expect(request.payee.partyIdType).to.satisfy(value => value === 'MSISDN' || value === 'ALIAS');\r",
											"});\r",
											"\r",
											"pm.test(\"PayeeNote and payeeMessage have no special characters\",\r",
											" function () {\r",
											"pm.expect(/^[ 0-9a-zA-Z\\-_]+$/.test(request.payeeNote)).to.be.true &\r",
											"pm.expect(/^[ 0-9a-zA-Z\\-_]+$/.test(request.payeeMessage)).to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Currency is EUR, for prodcution use country currency\", function () {\r",
											"  pm.expect(request.currency).to.satisfy(value => value === 'EUR');\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "dcc0f263-1f2f-4388-8357-9dc8c8eec3e6"
									}
								}
							],
							"id": "82457349-3dad-4ac5-8879-2670f806a40d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Access_Token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Callback-Url",
										"value": "{{CallbackURL}}"
									},
									{
										"key": "X-Reference-Id",
										"value": "{{Request_ID_Remit_Transfer}}"
									},
									{
										"key": "X-Target-Environment",
										"value": "{{Target_Environment}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{Remittance_Subscription-Key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"amount\": \"980000\",\r\n  \"currency\": \"EUR\",\r\n  \"externalId\": \"9087699\",\r\n  \"payee\": {\r\n    \"partyIdType\": \"MSISDN\",\r\n    \"partyId\": \"{{MSISDN}}\"\r\n  },\r\n  \"payerMessage\": \"remittance amount\",\r\n  \"payeeNote\": \"remittance amount\"\r\n}"
								},
								"url": "{{base_url}}/remittance/v1_0/transfer",
								"description": "\n### Request\n\n#### HTTP POST {{base_url}}/remittance/v1_0/transfer\n\n##### Headers\n- **X-Reference-Id**: The UUID Version 4 Format String, labeled as Request_ID_Transfer, is used to uniquely identify a transaction and retrieve the status.\n- **Authorization**: Bearer Token, the Access_token, is automatically generated in the pre-request script of the collection.\n- **X-Target-Environment**: Specifies the country the request is to be processed for production, using **sandbox** during testing.\n- **Content-Type**: application/json\n- **Ocp-Apim-Subscription-Key**: Subscription key providing access to the APIM.\n- **X-Callback-Url**: Secure HTTPS URL for receiving responses.\n\n##### Body\n- **Amount**: (string) Amount to be transferred to the MoMo Subscriber.\n- **Currency**: (string) Varies depending on the country, with Sandbox using EUR.\n- **ExternalId**: (string) String used for reconciliation between Partner Platform and MoMo Platform.\n- **PartyIdType**: (string) Supported types are MSISDN and ALIAS.\n- **PartyId**: (string) Value of the MSISDN Number or Merchant ID.\n- **PayerMessage**: (string) Notification sent to the Sender.\n- **PayeeNote**: (string) Notification sent to the receiver.\n\n### Response\n\n- **Status**: 202\n- **Content-Type**: text/xml\n- **Body**: null\n"
							},
							"response": [
								{
									"id": "d331c960-3f63-4e5a-b66b-7fe46e74a512",
									"name": "Transfer",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Callback-Url",
												"value": "{{CallbackURL}}"
											},
											{
												"key": "X-Reference-Id",
												"value": "{{Request_ID_Remit_Transfer}}"
											},
											{
												"key": "X-Target-Environment",
												"value": "{{Target_Environment}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{Remittance_Subscription-Key}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"amount\": \"980000\",\r\n  \"currency\": \"EUR\",\r\n  \"externalId\": \"9087699\",\r\n  \"payee\": {\r\n    \"partyIdType\": \"MSISDN\",\r\n    \"partyId\": \"{{MSISDN}}\"\r\n  },\r\n  \"payerMessage\": \"remittance amount\",\r\n  \"payeeNote\": \"remittance amount\"\r\n}"
										},
										"url": "{{base_url}}/remittance/v1_0/transfer"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "Transfer Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"  \r",
											"  pm.expect(responseData).to.be.an('object');\r",
											"  pm.expect(responseData.amount).to.exist;\r",
											"  pm.expect(responseData.currency).to.exist;\r",
											"  pm.expect(responseData.financialTransactionId).to.exist;\r",
											"  pm.expect(responseData.externalId).to.exist;\r",
											"  pm.expect(responseData.payee).to.exist;\r",
											"  pm.expect(responseData.payerMessage).to.exist;\r",
											"  pm.expect(responseData.payeeNote).to.exist;\r",
											"  pm.expect(responseData.status).to.exist;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Amount is in a valid format\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.amount).to.be.a('string').and.to.match(/^\\d+(\\.\\d{1,2})?$/);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Currency is in a valid format\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.currency).to.match(/[A-Z]{3}/, \"Currency should be in valid format\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Payee object contains partyIdType and partyId\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.payee).to.be.an('object');\r",
											"    pm.expect(responseData.payee.partyIdType).to.exist;\r",
											"    pm.expect(responseData.payee.partyId).to.exist;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "aefe336b-c13b-498e-b734-e5015383e71f"
									}
								}
							],
							"id": "5edf1585-c831-467d-8860-1fb78b26e6a0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Access_Token}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Target-Environment",
										"value": "{{Target_Environment}}"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{Remittance_Subscription-Key}}"
									}
								],
								"url": {
									"raw": "https://sandbox.momodeveloper.mtn.com/remittance/v1_0/transfer/:Request_ID_Remit_Transfer",
									"protocol": "https",
									"host": [
										"sandbox",
										"momodeveloper",
										"mtn",
										"com"
									],
									"path": [
										"remittance",
										"v1_0",
										"transfer",
										":Request_ID_Remit_Transfer"
									],
									"variable": [
										{
											"id": "bb45a7fe-c67a-44ed-b9d4-956f2cdaac1b",
											"key": "Request_ID_Remit_Transfer",
											"value": "{{Request_ID_Remit_Transfer}}"
										}
									]
								},
								"description": "\nThis HTTP GET request is used to retrieve information about a specific remittance transfer identified by the Request ID. The endpoint is https://sandbox.momodeveloper.mtn.com/remittance/v1_0/transfer/:Request_ID_Remit_Transfer.\n\n### Request\nNo request body is required for this GET request.\n\n#### Headers\nNo specific headers are required for this request.\n\n### Response\nUpon a successful execution, the API returns a JSON response with the following fields:\n- `amount`: The amount of the remittance transfer.\n- `currency`: The currency of the remittance transfer.\n- `financialTransactionId`: The financial transaction ID associated with the transfer.\n- `externalId`: The external ID associated with the transfer.\n- `payee`: An object containing information about the payee, including party ID type and party ID.\n- `payerMessage`: The message from the payer associated with the transfer.\n- `payeeNote`: The note from the payee associated with the transfer.\n- `status`: The status of the remittance transfer.\n\nThe response status for a successful execution is 200, and the Content-Type of the response is application/json.\n"
							},
							"response": [
								{
									"id": "0c064f9c-6516-4db9-aa1b-cbc0aedeb3b6",
									"name": "Transfer Status",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Target-Environment",
												"value": "{{Target_Environment}}"
											},
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{Remittance_Subscription-Key}}"
											}
										],
										"url": {
											"raw": "https://sandbox.momodeveloper.mtn.com/remittance/v1_0/transfer/:Request_ID_Remit_Transfer",
											"protocol": "https",
											"host": [
												"sandbox",
												"momodeveloper",
												"mtn",
												"com"
											],
											"path": [
												"remittance",
												"v1_0",
												"transfer",
												":Request_ID_Remit_Transfer"
											],
											"variable": [
												{
													"key": "Request_ID_Remit_Transfer",
													"value": "{{Request_ID_Remit_Transfer}}"
												}
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "656d11a8-4c01-49f6-9676-c15ee7cab353"
				},
				{
					"name": "CashTransfer",
					"item": [
						{
							"name": "cashtransfer",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e9244ab4-66c9-4a40-875e-254a9f648c3c",
										"exec": [
											"\r",
											"var ReferenceId = pm.variables.replaceIn(\"{{$guid}}\");\r",
											"pm.environment.set('Request_ID_Cash_Transfer', ReferenceId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "29fd2811-059b-4b89-87ce-a159ae9cfec5",
										"exec": [
											"var request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"X-Target-Environment header is set to 'sandbox' or for production set 'mtn'+'country'\", function () {\r",
											"    const targetEnvironment = pm.request.headers.get('X-Target-Environment');\r",
											"    pm.expect(targetEnvironment).to.satisfy(value => value === 'mtn'+'country)' || value === 'sandbox');\r",
											"});\r",
											"\r",
											"pm.test(\"X-Reference-Id header is UUID string formated\", function (){\r",
											"const xreferenceid =   pm.request.headers.get('X-Reference-Id');\r",
											"xreferenceid.match('^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"payee partyIdType and partyId are not empty\", function () {\r",
											"  pm.expect(request.payee.partyIdType).to.exist.and.to.not.be.empty;  \r",
											"  pm.expect(request.payee.partyId).to.exist.and.to.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"payee partyIdType is MSISDN or ALIAS\", function () {\r",
											"  pm.expect(request.payee.partyIdType).to.satisfy(value => value === 'MSISDN' || value === 'ALIAS');\r",
											"});\r",
											"\r",
											"pm.test(\"PayeeNote and payeeMessage have no special characters\",\r",
											" function () {\r",
											"pm.expect(/^[ 0-9a-zA-Z\\-_]+$/.test(request.payeeNote)).to.be.true &\r",
											"pm.expect(/^[ 0-9a-zA-Z\\-_]+$/.test(request.payeeMessage)).to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Currency is EUR, for prodcution use country currency\", function () {\r",
											"  pm.expect(request.currency).to.satisfy(value => value === 'EUR');\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"payerIdentificationType are 'CPFA','SRSA','NRIN','OTHR','DRLC','PASS','SOCS','AREG','IDCD','EMID' \", function () {\r",
											"  pm.expect(request.payerIdentificationType).to.be.oneOf(['CPFA','SRSA','NRIN','OTHR','DRLC','PASS','SOCS','AREG','IDCD','EMID']);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response status code is 202\", function () {\r",
											"  pm.response.to.have.status(202);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "1d490d69-7d4f-42d3-94ef-828d1fb0672b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Access_Token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Reference-Id",
										"value": "{{Request_ID_Cash_Transfer}}"
									},
									{
										"key": "X-Target-Environment",
										"value": "{{Target_Environment}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{Remittance_Subscription-Key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": \"208\",\r\n    \"currency\": \"EUR\",\r\n    \"payee\": {\r\n        \"partyIdType\": \"MSISDN\",\r\n        \"partyId\": \"{{MSISDN}}\"\r\n    },\r\n    \"externalId\": \"XTR1718714047\",\r\n    \"orginatingCountry\": \"SO\",\r\n    \"originalAmount\": \"1\",\r\n    \"originalCurrency\": \"USD\",\r\n    \"payerMessage\": \"From SO to MTN UG Payer\",\r\n    \"payeeNote\": \"Test\",\r\n    \"payerIdentificationType\": \"PASS\",\r\n    \"payerIdentificationNumber\": \"UG0002\",\r\n    \"payerIdentity\": \"ID:256701081899/MSISDN\",\r\n    \"payerFirstName\": \"Abdirazak\",\r\n    \"payerSurName\": \"Ibrahim\",\r\n    \"payerLanguageCode\": \"en\",\r\n    \"payerEmail\": \"abdirazak.ibrahim@tt.com\",\r\n    \"payerMsisdn\": \"252654249184\",\r\n    \"payerGender\": \"MALE\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/remittance/v2_0/cashtransfer"
							},
							"response": [
								{
									"id": "66146b82-0596-4081-9909-026e72d47511",
									"name": "cashtransfer",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Reference-Id",
												"value": "{{Request_ID_Cash_Transfer}}"
											},
											{
												"key": "X-Target-Environment",
												"value": "{{Target_Environment}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{Remittance_Subscription-Key}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"amount\": \"208\",\r\n    \"currency\": \"EUR\",\r\n    \"payee\": {\r\n        \"partyIdType\": \"MSISDN\",\r\n        \"partyId\": \"{{MSISDN}}\"\r\n    },\r\n    \"externalId\": \"XTR1718714047\",\r\n    \"orginatingCountry\": \"SO\",\r\n    \"originalAmount\": \"1\",\r\n    \"originalCurrency\": \"USD\",\r\n    \"payerMessage\": \"From SO to MTN UG Payer\",\r\n    \"payeeNote\": \"Test\",\r\n    \"payerIdentificationType\": \"PASS\",\r\n    \"payerIdentificationNumber\": \"UG0002\",\r\n    \"payerIdentity\": \"ID:256701081899/MSISDN\",\r\n    \"payerFirstName\": \"Abdirazak\",\r\n    \"payerSurName\": \"Ibrahim\",\r\n    \"payerLanguageCode\": \"en\",\r\n    \"payerEmail\": \"abdirazak.ibrahim@tt.com\",\r\n    \"payerMsisdn\": \"252654249184\",\r\n    \"payerGender\": \"MALE\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/remittance/v2_0/cashtransfer"
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Content-Length",
											"value": "0"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Request-Context",
											"value": "appId=cid-v1:e996501c-e721-4ac1-97ff-dc6887b85e8c"
										},
										{
											"key": "Date",
											"value": "Sat, 14 Sep 2024 03:57:08 GMT"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": null
								}
							]
						},
						{
							"name": "cashtransfer status",
							"id": "22795f0b-74b0-4d8a-b7d3-41c6b5324d82",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Access_Token}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Target-Environment",
										"value": "{{Target_Environment}}"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{Remittance_Subscription-Key}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/remittance/v2_0/cashtransfer/:Request_ID_Cash_Transfer",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"remittance",
										"v2_0",
										"cashtransfer",
										":Request_ID_Cash_Transfer"
									],
									"variable": [
										{
											"key": "Request_ID_Cash_Transfer",
											"value": "{{Request_ID_Cash_Transfer}}"
										}
									]
								},
								"description": "Generated from cURL: curl --location 'https://sandbox.momodeveloper.mtn.com//remittance/v2_0/cashtransfer/' \\\r\n--header 'X-Target-Environment: sandbox' \\\r\n--header 'Ocp-Apim-Subscription-Key: 80dbbaef060e4720a1089a018ba2bab8'"
							},
							"response": [
								{
									"id": "1fa64db8-4a5b-4326-bfed-a07b9699005a",
									"name": "cashtransfer status",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Target-Environment",
												"value": "{{Target_Environment}}"
											},
											{
												"key": "Ocp-Apim-Subscription-Key",
												"value": "{{Remittance_Subscription-Key}}"
											}
										],
										"url": {
											"raw": "{{base_url}}/remittance/v2_0/cashtransfer/:Request_ID_Cash_Transfer",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"remittance",
												"v2_0",
												"cashtransfer",
												":Request_ID_Cash_Transfer"
											],
											"variable": [
												{
													"key": "Request_ID_Cash_Transfer",
													"value": "{{Request_ID_Cash_Transfer}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Length",
											"value": "564"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=utf-8"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Request-Context",
											"value": "appId=cid-v1:e996501c-e721-4ac1-97ff-dc6887b85e8c"
										},
										{
											"key": "Date",
											"value": "Sat, 14 Sep 2024 03:57:57 GMT"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"financialTransactionId\": \"179403634\",\n    \"externalId\": \"XTR1718714047\",\n    \"payee\": {\n        \"partyIdType\": \"MSISDN\",\n        \"partyId\": \"56733123453\"\n    },\n    \"amount\": \"208\",\n    \"currency\": \"EUR\",\n    \"originalAmount\": \"1\",\n    \"originalCurrency\": \"USD\",\n    \"payerMessage\": \"From SO to MTN UG Payer\",\n    \"payeeNote\": \"Test\",\n    \"status\": \"SUCCESSFUL\",\n    \"payerIdentificationType\": \"PASS\",\n    \"payerIdentificationNumber\": \"UG0002\",\n    \"payerIdentity\": \"ID:256701081899/MSISDN\",\n    \"payerFirstName\": \"Abdirazak\",\n    \"payerSurName\": \"Ibrahim\",\n    \"payerLanguageCode\": \"en\",\n    \"payerEmail\": \"abdirazak.ibrahim@tt.com\",\n    \"payerMsisdn\": \"252654249184\",\n    \"payerGender\": \"MALE\"\n}"
								}
							]
						}
					],
					"id": "deb59c14-11bf-44ae-a552-38efb73ea0d2",
					"description": "CashTransfer API is the enriched Remittance API, designed to facilitate the efficient capture of Know Your Customer (KYC) details for both the payer and payee involved in fund transfers. In conjunction with customer feedback and regulatory consultations\n\nBelow are the descriptions for the newly added fields:\n\n### Field Descriptions:\n\n- **amount:** This is the sum that the recipient will receive following currency conversion.\n    \n- **currency:** Specifies the type of currency in which the recipient will receive the amount. [ (ISO 4217 Currency Codes)](https://www.foreignexchangelive.com/currency-codes-symbols/)\n    \n- **payee:** Contains information about the beneficiary.\n    \n    - **partyId:** A unique identifier for the recipient, which could be a phone number, email, or a designated party code.\n        \n    - **partyIdType:** The kind of identifier being used, such as MSISDN, EMAIL, or PARTY_CODE.\n        \n- **externalId:** This is the transaction ID used for business applications and is useful for reconciliation purposes.\n    \n- **originatingCountry:** The country from which the funds are being sent.\n    \n- **originalAmount:** The initial sum to be received before any currency conversion takes place.\n    \n- **originalCurrency:** The currency in which the original sum is denominated. [(ISO 4217 Currency Codes)](https://www.foreignexchangelive.com/currency-codes-symbols/)\n    \n- **payerMessage:** A message that will be delivered to the sender.\n    \n- **payeeNote:** A note that will be delivered to the beneficiary.\n    \n- **payerIdentificationType:** The type of identification used for the sender, with possible values including CPFA, SRSA, NRIN, etc.\n    \n\n**payerIdentificationTypes**  \nCPFA - CPF account number   \nSRSA - SRS account number  \nNRIN - National registration identification number  \nOTHR - Other  \nDRLC - Drivers license number   \nPASS - Passport number   \nSOCS - Social security number   \nAREG - Alien registration number   \nIDCD - Identity card number  \nEMID - Employer identification number\n\n- **payerIdentificationNumber:** The identification number that corresponds to the specified identification type.\n    \n- **payerIdentity:** The MSISDN utilized by the sender in the country where the remittance originates. Format: (ID:6873248686/MSISDN)\n    \n- **payerFirstName / payerSurName:** The given name and surname of the sender.\n    \n- **payerLanguageCode:** The linguistic code corresponding to the sender's nation. [ISO_639-1](https://en.wikipedia.org/wiki/ISO_639-1)\n    \n- **payerEmail:** The sender's electronic mail address. (Validated)\n    \n- **payerMsisdn:** The phone number of the sender.\n    \n- **payerGender:** The sex of the sender. (MALE, FEMALE, OTHER)"
				}
			],
			"id": "55d6e99a-341d-4944-87ef-5a7d99fa60f4",
			"description": "The Remittance API empowers businesses by enabling users to transmit or receive funds from overseas straight into their Mobile Money accounts, all in local currency."
		},
		{
			"name": "Account Balance",
			"item": [
				{
					"name": "Get Account Balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"X-Target-Environment header is set to 'sandbox' or for production set 'mtn'+'country'\", function () {",
									"    const targetEnvironment = pm.request.headers.get('X-Target-Environment');",
									"    pm.expect(targetEnvironment).to.satisfy(value => value === 'mtn'+'country)' || value === 'sandbox');",
									"});",
									"",
									"pm.test(\"Ocp-Apim-Subscription-Key is  Collection_Subscription Key or Disbursement_Subscription Key\", ",
									"function () {",
									"    const subscriptionkey = pm.request.headers.get('Ocp-Apim-Subscription-Key');",
									"   pm.expect(subscriptionkey).to.satisfy(value => value === pm.environment.get('Collection_Subscription-Key')||value === pm.environment.get('Disbursement_Subscription-key') );   ",
									"});",
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has the required fields - availableBalance and currency\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.availableBalance).to.exist;",
									"    pm.expect(responseData.currency).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"Content-Type is application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"",
									"pm.test(\"Authorization header is present and contains a Bearer Token\", function () {",
									"    pm.expect(pm.request.headers.get(\"Authorization\")).to.exist;",
									"    pm.expect(pm.request.headers.get(\"Authorization\")).to.include(\"Bearer\");",
									"});",
									"",
									"",
									"pm.test(\"X-Target-Environment header is set to 'sandbox'\", function () {",
									"    pm.expect(pm.request.headers.get('X-Target-Environment')).to.equal('sandbox');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "0a0256dd-1f48-416f-8dd6-a98a53b46136"
							}
						}
					],
					"id": "5ad3af1f-24d0-4128-8960-6c9251373ef6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Access_Token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Target-Environment",
								"value": "{{Target_Environment}}"
							},
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{Collection_Subscription-Key}}"
							}
						],
						"url": "{{base_url}}/collection/v1_0/account/balance",
						"description": "\nThis endpoint makes an HTTP GET request to retrieve the account balance from the specified collection. The response of this request can be documented as a JSON schema.\n"
					},
					"response": []
				}
			],
			"id": "7fe8fa86-8168-4929-bbc1-e516f0b72b1c",
			"description": "MoMo API for Account Balance to check your personal account standings. Remember, this balance isn't for the client, but specifically for the Merchant Account - the Account Owner"
		},
		{
			"name": "Get API User and API Key",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8989a03a-175c-4122-b678-f72faa7ad706",
						"exec": [
							"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {",
							"    console.log(response.json());",
							"});",
							"var successHttpStatuses = [200, 201, 202, 204];",
							"var message = pm.response.code;",
							"var BD = pm.response.body;",
							"var APIUSER_1 = pm.environment.get(\"api_user\");",
							"",
							"const postRequest = {",
							"    url: 'https://sandbox.momodeveloper.mtn.com/v1_0/apiuser/' + APIUSER_1 + '/apikey',",
							"    method: 'POST',",
							"    timeout: 0,",
							"    header: {",
							"        \"Ocp-Apim-Subscription-Key\": pm.variables.get(\"Collection_Subscription-Key\"),",
							"    }",
							"};",
							"pm.sendRequest(postRequest, function (err, res) ",
							"{",
							"    var responseJson = res.json();  ",
							"    var body2 = pm.response.contentInfo();",
							"    //console.log(responseJson['access_token']);",
							"   pm.environment.set('api_key', responseJson['apiKey']);",
							"    var sandbox_apiuser = pm.environment.get(\"api_user\");",
							"    var sandbox_apikey = pm.environment.get(\"api_key\");",
							"   responseJson['body'];",
							"    console.log(\"SandBox API USER is \" + sandbox_apiuser + \" \" + \" API KEY is \" + sandbox_apikey);  ",
							"    pm.test(\"Response code \"+message +\" SandBox API USER is \" + pm.environment.get(\"api_user\") + \" \" + \" API KEY is \" + sandbox_apikey, function () {",
							"    pm.expect(pm.response.code).to.be.oneOf(successHttpStatuses); ",
							"      ",
							"});",
							"});",
							"",
							"pm.test(\"Response code is one of the success HTTP statuses (200, 201, 202, 204)\", function () {",
							"    pm.expect([200, 201, 202, 204]).to.include(pm.response.code);",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "7f68b754-b371-44d6-a135-fb070963398f",
						"exec": [
							"var ReferenceId = pm.environment.replaceIn(\"{{$guid}}\");\r",
							"pm.environment.set('api_user',ReferenceId)\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "86331498-8686-435c-802b-78532af55000",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Reference-Id",
						"value": "{{api_user}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{Collection_Subscription-Key}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"providerCallbackHost\": {{CallbackHost}}\r\n}"
				},
				"url": "{{base_url}}/v1_0/apiuser",
				"description": "\nThis endpoint makes an HTTP POST request to create an API user at the specified URL. The request body should include a \"providerCallbackHost\" parameter, which is a placeholder for the callback host URL.\n\n### Response\nThe response of this request is a JSON schema. The schema will outline the structure of the response object, including the data types and properties that will be returned upon a successful request.\n"
			},
			"response": [
				{
					"id": "08ba4d33-7400-462f-a66c-76dcef852a20",
					"name": "Get API User and API Key",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "X-Reference-Id",
								"value": "{{api_user}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{Collection_Subscription-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"providerCallbackHost\": {{CallbackHost}}\r\n}"
						},
						"url": "{{base_url}}/v1_0/apiuser"
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Content-Length",
							"value": "0"
						},
						{
							"key": "X-XSS-Protection",
							"value": "1; mode=block"
						},
						{
							"key": "Request-Context",
							"value": "appId=cid-v1:e996501c-e721-4ac1-97ff-dc6887b85e8c"
						},
						{
							"key": "Date",
							"value": "Tue, 08 Oct 2024 20:26:22 GMT"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": null
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "4c3cfc1f-ace7-4160-95ec-8372dac8fa54",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"setTimeout(function(){}, 10000);\r",
					"var needNewToken = true;\r",
					"if(pm.request.url.path.join('/').includes('/token')) {\r",
					"    // excude token generation API from reusing the token.\r",
					"    return;\r",
					"}\r",
					"if (!pm.environment.get('Access_Token_Expiry') ||\r",
					"    !pm.environment.get('Access_Token')) {\r",
					"    console.log('access_token or its expiry date are missing.');\r",
					"} else if (pm.environment.get('Access_Token_Expiry') <= (new Date()).getTime()) {\r",
					"    console.log('access_token is expired, New AccessToken is Generated')\r",
					"}  else {\r",
					"    console.log('Reusing previous access_token, valid until ', new Date(pm.environment.get('Access_Token_Expiry')));\r",
					"    needNewToken = false;\r",
					"}\r",
					"if (needNewToken === true) {\r",
					"const postRequest = {    \r",
					"  url: String(pm.environment.get('base_url')+'/collection/token/'),\r",
					"  method: 'POST',\r",
					"  timeout: 0,\r",
					"  header: {\r",
					"    \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
					"    \"Ocp-Apim-Subscription-Key\":pm.environment.get(\"Collection_Subscription-Key\"),\r",
					"    'authorization': 'Basic ' + require('btoa')(pm.environment.get('api_user') + ':' +\r",
					"            pm.environment.get('api_key'))\r",
					"  }\r",
					"};\r",
					"pm.sendRequest(postRequest, function (err, res) {\r",
					"    var responseJson = res.json();\r",
					"\r",
					"    //console.log(responseJson['access_token']);\r",
					"    pm.environment.set('Access_Token', responseJson['access_token']);\r",
					"    var expiryDate = new Date();\r",
					"    expiryDate.setSeconds(expiryDate.getSeconds() + responseJson.expires_in);\r",
					"    //console.log('Saving the access_token_expiry', expiryDate.getTime());\r",
					"    pm.environment.set('Access_Token_Expiry', expiryDate.getTime());\r",
					"});\r",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "0a6aaf9b-669f-449d-a087-95ae88aee1cb",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"var successHttpStatuses = [200, 201, 202, 204];\r",
					"var statusgone = [410];\r",
					"var message = pm.response.code;\r",
					"\r",
					"if(!isSuccessful()) {\r",
					"\r",
					"    console.error(\"Unexpected HTTP Status Code: \", message, pm.response.text());\r",
					"    message = message + \", \"+pm.response.text() +\" :\"+message_er;\r",
					"}\r",
					"\r",
					"pm.test(\"Response code \"+ message, function () {\r",
					"    pm.expect(pm.response.code).to.be.oneOf((successHttpStatuses)||(statusgone));\r",
					"   \r",
					" });\r",
					"\r",
					"function isSuccessful() {\r",
					"    if(pm.response.code===200){\r",
					"        message=message+ \" Request Received OK \";\r",
					"    } else if(pm.response.code===202)\r",
					"    {message=message+ \" Request Accepted OK \";}\r",
					"    else if(pm.response.code===410)\r",
					"    {message=message+ \"Resource Gone\";}\r",
					"\t\t else if(pm.response.code===404)\r",
					"    {message=message+ \"Resource Not Found\";}\r",
					"    else{message=message+ \" \";}\r",
					"    return message;//successHttpStatuses.includes(pm.response.code);\r",
					"}\r",
					""
				]
			}
		}
	]
}